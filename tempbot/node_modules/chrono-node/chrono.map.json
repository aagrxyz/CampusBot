{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/chrono.js","src/options.js","src/parsers/parser.js","src/refiners/refiner.js","src/result.js","src/parsers/EN/ENISOFormatParser.js","src/parsers/EN/ENDeadlineFormatParser.js","src/parsers/EN/ENMonthNameLittleEndianParser.js","src/parsers/EN/ENMonthNameMiddleEndianParser.js","src/parsers/EN/ENMonthNameParser.js","src/parsers/EN/ENSlashDateFormatParser.js","src/parsers/EN/ENSlashDateFormatStartWithYearParser.js","src/parsers/EN/ENSlashMonthFormatParser.js","src/parsers/EN/ENTimeAgoFormatParser.js","src/parsers/EN/ENTimeExpressionParser.js","src/parsers/EN/ENWeekdayParser.js","src/parsers/EN/ENCasualDateParser.js","src/parsers/JP/JPStandardParser.js","src/parsers/JP/JPCasualDateParser.js","src/parsers/ES/ESCasualDateParser.js","src/parsers/ES/ESDeadlineFormatParser.js","src/parsers/ES/ESTimeAgoFormatParser.js","src/parsers/ES/ESTimeExpressionParser.js","src/parsers/ES/ESWeekdayParser.js","src/parsers/ES/ESMonthNameLittleEndianParser.js","src/parsers/ES/ESSlashDateFormatParser.js","src/parsers/FR/FRCasualDateParser.js","src/parsers/FR/FRDeadlineFormatParser.js","src/parsers/FR/FRMonthNameLittleEndianParser.js","src/parsers/FR/FRSlashDateFormatParser.js","src/parsers/FR/FRTimeAgoFormatParser.js","src/parsers/FR/FRTimeExpressionParser.js","src/parsers/FR/FRWeekdayParser.js","src/parsers/ZH-Hant/ZHHantDateParser.js","src/parsers/ZH-Hant/ZHHantWeekdayParser.js","src/parsers/ZH-Hant/ZHHantTimeExpressionParser.js","src/parsers/ZH-Hant/ZHHantCasualDateParser.js","src/parsers/ZH-Hant/ZHHantDeadlineFormatParser.js","src/refiners/OverlapRemovalRefiner.js","src/refiners/ExtractTimezoneOffsetRefiner.js","src/refiners/ExtractTimezoneAbbrRefiner.js","src/refiners/ForwardDateRefiner.js","src/refiners/UnlikelyFormatFilter.js","src/refiners/EN/ENMergeDateTimeRefiner.js","src/refiners/EN/ENMergeDateRangeRefiner.js","src/refiners/JP/JPMergeDateRangeRefiner.js","src/refiners/FR/FRMergeDateRangeRefiner.js","src/refiners/FR/FRMergeDateTimeRefiner.js","src/utils/ZH-Hant.js","src/utils/EN.js","src/utils/JP.js","src/utils/ES.js","src/utils/FR.js","node_modules/moment/moment.js"],"names":["options","exports","require","parser","refiner","Parser","Refiner","Filter","ParsedResult","ParsedComponents","Chrono","option","casualOption","this","parsers","Object","refiners","prototype","parse","text","refDate","opt","Date","allResults","forEach","results","execute","concat","sort","a","b","index","refine","parseDate","length","start","date","strict","strictOption","casual","apply","arguments","baseOption","strictMode","ENISOFormatParser","ENDeadlineFormatParser","ENMonthNameLittleEndianParser","ENMonthNameMiddleEndianParser","ENMonthNameParser","ENSlashDateFormatParser","ENSlashDateFormatStartWithYearParser","ENSlashMonthFormatParser","ENTimeAgoFormatParser","ENTimeExpressionParser","JPStandardParser","ESTimeAgoFormatParser","ESDeadlineFormatParser","ESTimeExpressionParser","ESMonthNameLittleEndianParser","ESSlashDateFormatParser","FRDeadlineFormatParser","FRMonthNameLittleEndianParser","FRSlashDateFormatParser","FRTimeAgoFormatParser","FRTimeExpressionParser","ZHHantDateParser","ZHHantWeekdayParser","ZHHantTimeExpressionParser","ZHHantCasualDateParser","ZHHantDeadlineFormatParser","OverlapRemovalRefiner","ForwardDateRefiner","ENMergeDateTimeRefiner","ENMergeDateRangeRefiner","FRMergeDateRangeRefiner","FRMergeDateTimeRefiner","JPMergeDateRangeRefiner","ExtractTimezoneOffsetRefiner","ExtractTimezoneAbbrRefiner","UnlikelyFormatFilter","unshift","ENCasualDateParser","ENWeekdayParser","JPCasualDateParser","ESCasualDateParser","ESWeekdayParser","FRCasualDateParser","FRWeekdayParser","isStrictMode","pattern","extract","ref","match","regex","remainingText","exec","result","substring","hasPossibleDates","push","call","isValid","filteredResult","i","tags","end","components","knownValues","impliedValues","key","moment","imply","month","year","clone","JSON","stringify","isPossibleDate","component","get","value","assign","isCertain","dateMoment","utcOffset","toDate","set","currentTimezoneOffset","targetTimezoneOffset","adjustTimezoneOffset","add","PATTERN","RegExp","YEAR_NUMBER_GROUP","MONTH_NUMBER_GROUP","DATE_NUMBER_GROUP","HOUR_NUMBER_GROUP","MINUTE_NUMBER_GROUP","SECOND_NUMBER_GROUP","MILLISECOND_NUMBER_GROUP","TZD_HOUR_OFFSET_GROUP","TZD_MINUTE_OFFSET_GROUP","substr","parseInt","minuteOffset","hourOffset","offset","util","INTEGER_WORDS_PATTERN","STRICT_PATTERN","num","toLowerCase","undefined","INTEGER_WORDS","hour","minute","second","ORDINAL_WORDS_PATTERN","WEEKDAY_GROUP","DATE_GROUP","DATE_NUM_GROUP","DATE_TO_GROUP","DATE_TO_NUM_GROUP","MONTH_NAME_GROUP","YEAR_GROUP","YEAR_BE_GROUP","MONTH_OFFSET","day","ORDINAL_WORDS","trim","replace","test","refMoment","nextYear","lastYear","Math","abs","diff","weekday","WEEKDAY_OFFSET","endDate","YEAR_GROUP2","YEAR_BE_GROUP2","yearBE","DAYS_OFFSET","sunday","sun","monday","mon","tuesday","wednesday","wed","thursday","thur","friday","fri","saturday","sat","OPENNING_GROUP","ENDING_GROUP","MONTH_GROUP","DAY_GROUP","argument","indexOf","tday","FIRST_REG_PATTERN","SECOND_REG_PATTERN","HOUR_GROUP","MINUTE_GROUP","SECOND_GROUP","AM_PM_HOUR_GROUP","meridiem","ampm","startAtPM","getTime","tues","tue","thurs","thu","keys","join","PREFIX_GROUP","POSTFIX_GROUP","updateParsedComponent","modifyer","startMoment","startMomentFixed","refOffset","dayOfWeek","prefix","postfix","norm","lowerText","millisecond","secondMatch","ERA_GROUP","toHankaku","firstMatch","isNaN","domingo","dom","lunes","lun","martes","mar","miercoles","miércoles","mie","jueves","jue","viernes","vier","sabado","sábado","sab","modifier","dimanche","dim","lundi","mardi","mercredi","mer","jeudi","jeu","vendredi","ven","samedi","sam","NUMBER","zhStringToNumber","zhStringToYear","patternString1","patternString2","DAY_GROUP_1","ZH_AM_PM_HOUR_GROUP_1","ZH_AM_PM_HOUR_GROUP_2","DAY_GROUP_3","ZH_AM_PM_HOUR_GROUP_3","ZHTimeExpressionParser","day1","day3","zhAMPMString1","zhAMPM1","zhAMPMString2","zhAMPM2","zhAMPMString3","zhAMPM3","endMoment","NOW_GROUP","TIME_GROUP_1","TIME_GROUP_2","TIME_GROUP_3","time1","timeString2","time2","timeString3","time3","NUMBER_GROUP","UNIT_GROUP","number","string","unit","unitAbbr","filteredResults","prevResult","TIMEZONE_OFFSET_PATTERN","TIMEZONE_OFFSET_SIGN_GROUP","TIMEZONE_OFFSET_HOUR_OFFSET_GROUP","TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP","timezoneOffset","TIMEZONE_ABBR_MAP","TIMEZONE_NAME_PATTERN","timezoneAbbr","toUpperCase","ACDT","ACST","ADT","AEDT","AEST","AFT","AKDT","AKST","ALMT","AMST","AMT","ANAST","ANAT","AQTT","ART","AST","AWDT","AWST","AZOST","AZOT","AZST","AZT","BNT","BOT","BRST","BRT","BST","BTT","CAST","CAT","CCT","CDT","CEST","CET","CHADT","CHAST","CKT","CLST","CLT","COT","CST","CVT","CXT","ChST","DAVT","EASST","EAST","EAT","ECT","EDT","EEST","EET","EGST","EGT","EST","ET","FJST","FJT","FKST","FKT","FNT","GALT","GAMT","GET","GFT","GILT","GMT","GST","GYT","HAA","HAC","HADT","HAE","HAP","HAR","HAST","HAT","HAY","HKT","HLV","HNA","HNC","HNE","HNP","HNR","HNT","HNY","HOVT","ICT","IDT","IOT","IRDT","IRKST","IRKT","IRST","IST","JST","KGT","KRAST","KRAT","KST","KUYT","LHDT","LHST","LINT","MAGST","MAGT","MART","MAWT","MDT","MESZ","MEZ","MHT","MMT","MSD","MSK","MST","MUT","MVT","MYT","NCT","NDT","NFT","NOVST","NOVT","NPT","NST","NUT","NZDT","NZST","OMSST","OMST","PDT","PET","PETST","PETT","PGT","PHOT","PHT","PKT","PMDT","PMST","PONT","PST","PT","PWT","PYST","PYT","RET","SAMT","SAST","SBT","SCT","SGT","SRT","SST","TAHT","TFT","TJT","TKT","TLT","TMT","TVT","ULAT","UTC","UYST","UYT","UZT","VET","VLAST","VLAT","VUT","WAST","WAT","WEST","WESZ","WET","WEZ","WFT","WGST","WGT","WIB","WIT","WITA","WST","WT","YAKST","YAKT","YAPT","YEKST","YEKT","isAfter","isDateOnly","isTimeOnly","isAbleToMerge","curResult","textBetween","mergeResult","dateResult","timeResult","beginDate","beginTime","beginDateTime","endTime","endDateTime","startIndex","min","endIndex","max","tag","mergedResult","currResult","result1","result2","begin","isWeekdayResult","fromResult","toResult","tmp","constructor","name","零","一","二","兩","三","四","五","六","七","八","九","十","廿","卅","天","日","char","january","jan","jan.","february","feb","feb.","march","mar.","april","apr","apr.","may","june","jun","jun.","july","jul","jul.","august","aug","aug.","september","sep","sep.","sept","sept.","october","oct","oct.","november","nov","nov.","december","dec","dec.","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","first","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","twentieth","twenty first","twenty second","twenty third","twenty fourth","twenty fifth","twenty sixth","twenty seventh","twenty eighth","twenty ninth","thirtieth","thirty first","String","fromCharCode","alphaNum","token","charCodeAt","toZenkaku","vie","enero","ene","ene.","febrero","marzo","abril","abr","abr.","mayo","may.","junio","julio","agosto","ago","ago.","septiembre","octubre","noviembre","diciembre","dic","dic.","janvier","février","fév","fév.","mars","avril","avr","avr.","mai","juin","juillet","août","aout","septembre","octobre","novembre","décembre","un","deux","trois","quatre","cinq","huit","neuf","dix","onze","douze","treize","global","factory","module","define","amd","utils_hooks__hooks","hookCallback","setHookCallback","callback","isArray","input","toString","isDate","map","arr","fn","res","hasOwnProp","hasOwnProperty","extend","valueOf","create_utc__createUTC","format","locale","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","getParsingFlags","m","_pf","valid__isValid","_isValid","flags","_d","_strict","bigHour","valid__createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","obj","toInt","argumentForCoercion","coercedNumber","isFinite","floor","ceil","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","Locale","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","slice","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","e","values","data","locale_locales__getLocale","defineLocale","abbr","addUnitAlias","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","getSet","zeroFill","targetLength","forceSign","output","sign","addFormatToken","padded","ordinal","func","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","array","formattingTokens","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","addRegexToken","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","getUTCDate","localeMonths","_months","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","months","monthsShort","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","msgWithStack","Error","stack","deprecateSimple","deprecations","configFromISO","l","from_string__isoRegex","isoDates","isoTimes","matchOffset","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","y","d","h","M","ms","setFullYear","createUTCDate","setUTCFullYear","daysInYear","isLeapYear","getIsLeapYear","weekOfYear","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","daysToDayOfWeek","local__createLocal","week","dayOfYear","localeWeek","_week","dow","doy","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","dayOfYearFromWeeks","daysToAdd","getUTCDay","getSetDayOfYear","round","startOf","defaults","c","currentDateArray","now","_useUTC","getUTCFullYear","getUTCMonth","getFullYear","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","GG","W","E","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","_meridiem","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","createFromConfig","preparse","configFromInput","isUTC","pickBy","moments","args","Duration","duration","years","quarters","quarter","weeks","days","hours","minutes","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","separator","offsetFromString","matches","chunk","parts","chunkOffset","cloneWithOffset","model","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","localAdjust","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","create__isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isBefore","createAdder","direction","period","dur","isAdding","moment_calendar__calendar","time","sod","calendar","inputMs","endOf","isBetween","isSame","absFloor","asFloat","delta","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toISOString","inputString","defaultFormat","postformat","withoutSuffix","humanize","fromNow","toNow","newLocaleData","isoWeekday","to_type__valueOf","unix","moment_valid__isValid","parsingFlags","invalidAt","addWeekYearFormatToken","getter","weeksInYear","getSetWeekYear","getSetISOWeekYear","getISOWeeksInYear","getWeeksInYear","weekInfo","getSetQuarter","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","weekdays","weekdaysShort","weekdaysMin","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","lowercase","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","millisecond__milliseconds","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","locale_set__set","_ordinalParseLenient","_ordinalParse","source","lists__get","field","setter","list","count","out","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","bubble","daysToYears","yearsToDays","as","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","thresholds","duration_humanize__getSetRelativeTimeThreshold","threshold","limit","withSuffix","iso_string__toISOString","Y","iso_string__abs","D","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","getSetDayOfMonth","invalidWeekday","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","toJSON","isoWeek","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","dates","zone","momentPrototype","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","prototype__proto","firstDayOfYear","ordinalParse","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_get__milliseconds","duration_prototype__proto","toIsoString","version","invalid","relativeTimeThreshold","_moment"],"mappings":"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IAAM,KAAKC,IAAM,GAAGC,IAAM,IAAIC,KAAO,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,KAAKC,KAAO,IAAIC,IAAM,GAAGC,MAAQ,IAAIC,MAAQ,IAAIC,IAAM,KAAKC,KAAO,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,IAAIC,IAAM,IAAIC,KAAO,IAAIC,KAAO,IAAIC,MAAQ,KAAKC,KAAO,KAAKC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,KAAO,IAAIC,IAAM,IAAIC,KAAO,EAAEC,IAAM,IAAIC,IAAM,KAAKC,GAAK,KAAKC,KAAO,IAAIC,IAAM,IAAIC,KAAO,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,KAAKC,KAAO,KAAKC,IAAM,IAAIC,IAAM,KAAKC,KAAO,IAAIC,IAAM,EAAEC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,KAAKC,IAAM,IAAIC,IAAM,KAAKC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,KAAO,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,KAAO,IAAIC,IAAM,GAAGC,IAAM,IAAIC,IAAM,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,IAAIC,KAAO,IAAIC,KAAO,IAAIC,KAAO,IAAIC,KAAO,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,KAAO,KAAKC,KAAO,IAAIC,IAAM,KAAKC,KAAO,IAAIC,IAAM,GAAGC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,KAAKC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,KAAO,IAAIC,KAAO,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,KAAKC,IAAM,KAAKC,M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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nvar options = exports.options = require('./options');\n\nexports.parser = require('./parsers/parser');\nexports.refiner = require('./refiners/refiner');\n\nexports.Parser = exports.parser.Parser;\nexports.Refiner = exports.refiner.Refiner;\nexports.Filter = exports.refiner.Filter;\n\nexports.ParsedResult = require('./result').ParsedResult;\nexports.ParsedComponents = require('./result').ParsedComponents;\n\nvar Chrono = function(option) {\n\n    option = option || exports.options.casualOption();\n\n    this.option = option;\n    this.parsers = new Object(option.parsers);\n    this.refiners = new Object(option.refiners);\n}\n\n\nChrono.prototype.parse = function(text, refDate, opt) {\n\n    refDate = refDate || new Date();\n    opt = opt || {};\n\n    var allResults = [];\n\n    this.parsers.forEach(function (parser) {\n        var results = parser.execute(text, refDate, opt);\n        allResults = allResults.concat(results);\n    });\n\n    allResults.sort(function(a, b) {\n        return a.index - b.index;\n    });\n\n    this.refiners.forEach(function (refiner) {\n        allResults = refiner.refine(text, allResults, opt);\n    });\n    \n    return allResults;\n};\n\n\nChrono.prototype.parseDate = function(text, refDate, opt) {\n    var results = this.parse(text, refDate, opt);\n    if (results.length > 0) {\n        return results[0].start.date();\n    }\n    return null;\n}\n\nexports.Chrono = Chrono;\nexports.strict = new Chrono( options.strictOption() );\nexports.casual = new Chrono( options.casualOption() );\n\nexports.parse = function () {\n    return exports.casual.parse.apply(exports.casual, arguments);\n}\n\nexports.parseDate = function () {\n    return exports.casual.parseDate.apply(exports.casual, arguments);\n}\n","var parser = require('./parsers/parser');\nvar refiner = require('./refiners/refiner');\n\nfunction baseOption(strictMode) {\n\n    return {\n        parsers: [\n\n            // EN\n            new parser.ENISOFormatParser(strictMode),\n            new parser.ENDeadlineFormatParser(strictMode),\n            new parser.ENMonthNameLittleEndianParser(strictMode),\n            new parser.ENMonthNameMiddleEndianParser(strictMode),\n            new parser.ENMonthNameParser(strictMode),\n            new parser.ENSlashDateFormatParser(strictMode),\n            new parser.ENSlashDateFormatStartWithYearParser(strictMode),\n            new parser.ENSlashMonthFormatParser(strictMode),\n            new parser.ENTimeAgoFormatParser(strictMode),\n            new parser.ENTimeExpressionParser(strictMode),\n\n            // JP\n            new parser.JPStandardParser(strictMode),\n\n            // ES\n            new parser.ESTimeAgoFormatParser(strictMode),\n            new parser.ESDeadlineFormatParser(strictMode),\n            new parser.ESTimeExpressionParser(strictMode),\n            new parser.ESMonthNameLittleEndianParser(strictMode),\n            new parser.ESSlashDateFormatParser(strictMode),\n\n            // FR\n            new parser.FRDeadlineFormatParser(strictMode),\n            new parser.FRMonthNameLittleEndianParser(strictMode),\n            new parser.FRSlashDateFormatParser(strictMode),\n            new parser.FRTimeAgoFormatParser(strictMode),\n            new parser.FRTimeExpressionParser(strictMode),\n\n            // ZH-Hant\n            new parser.ZHHantDateParser(strictMode),\n            new parser.ZHHantWeekdayParser(strictMode),\n            new parser.ZHHantTimeExpressionParser(strictMode),\n            new parser.ZHHantCasualDateParser(strictMode),\n            new parser.ZHHantDeadlineFormatParser(strictMode),\n        ],\n\n        refiners: [\n            // Removing overlaping first\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n\n            // ETC\n            new refiner.ENMergeDateTimeRefiner(),\n            new refiner.ENMergeDateRangeRefiner(),\n            new refiner.FRMergeDateRangeRefiner(),\n            new refiner.FRMergeDateTimeRefiner(),\n            new refiner.JPMergeDateRangeRefiner(),\n\n            // Extract additional info later\n            new refiner.ExtractTimezoneOffsetRefiner(),\n            new refiner.ExtractTimezoneAbbrRefiner(),\n\n            new refiner.UnlikelyFormatFilter()\n        ]\n    }\n}\n\n\n\nexports.strictOption = function () {\n    return baseOption(true);\n};\n\n\nexports.casualOption = function () {\n\n    var options = baseOption(false);\n\n    // EN\n    options.parsers.unshift(new parser.ENCasualDateParser());\n    options.parsers.unshift(new parser.ENWeekdayParser());\n\n    // JP\n    options.parsers.unshift(new parser.JPCasualDateParser());\n\n    // ES\n    options.parsers.unshift(new parser.ESCasualDateParser());\n    options.parsers.unshift(new parser.ESWeekdayParser());\n\n    // FR\n    options.parsers.unshift(new parser.FRCasualDateParser());\n    options.parsers.unshift(new parser.FRWeekdayParser());\n    \n    return options;\n};\n","\nfunction Parser(strictMode) {\n\n    this.isStrictMode = function() { return (strictMode == true) };\n\n    this.pattern = function() { return /./i; }\n\n    this.extract = function(text, ref, match, opt){ return null; }\n\n    this.execute = function(text, ref, opt) {\n\n        var results = [];\n        var regex = this.pattern();\n\n        var remainingText = text;\n        var match = regex.exec(remainingText);\n\n        while (match) {\n\n            // Calculate match index on the full text;\n            match.index += text.length - remainingText.length;\n\n            var result = this.extract(text, ref, match, opt);\n            if (result) {\n\n                // If success, start from the end of the result\n                remainingText = text.substring(result.index + result.text.length);\n\n                if (!this.isStrictMode() || result.hasPossibleDates()) {\n                    results.push(result);\n                }\n\n            } else {\n                // If fail, move on by 1\n                remainingText = text.substring(match.index + 1);\n            }\n\n            match = regex.exec(remainingText);\n        }\n\n        if (this.refiners) {\n            this.refiners.forEach(function () {\n                results = refiner.refine(results, text, options);\n            });\n        }\n\n        return results;\n    }\n}\n\nexports.Parser = Parser;\n\nexports.ENISOFormatParser = require('./EN/ENISOFormatParser').Parser;\nexports.ENDeadlineFormatParser = require('./EN/ENDeadlineFormatParser').Parser;\nexports.ENMonthNameLittleEndianParser = require('./EN/ENMonthNameLittleEndianParser').Parser;\nexports.ENMonthNameMiddleEndianParser = require('./EN/ENMonthNameMiddleEndianParser').Parser;\nexports.ENMonthNameParser = require('./EN/ENMonthNameParser').Parser;\nexports.ENSlashDateFormatParser = require('./EN/ENSlashDateFormatParser').Parser;\nexports.ENSlashDateFormatStartWithYearParser = require('./EN/ENSlashDateFormatStartWithYearParser').Parser;\nexports.ENSlashMonthFormatParser = require('./EN/ENSlashMonthFormatParser').Parser;\nexports.ENTimeAgoFormatParser = require('./EN/ENTimeAgoFormatParser').Parser;\nexports.ENTimeExpressionParser = require('./EN/ENTimeExpressionParser').Parser;\nexports.ENWeekdayParser = require('./EN/ENWeekdayParser').Parser;\nexports.ENCasualDateParser = require('./EN/ENCasualDateParser').Parser;\n\nexports.JPStandardParser = require('./JP/JPStandardParser').Parser;\nexports.JPCasualDateParser = require('./JP/JPCasualDateParser').Parser;\n\n\nexports.ESCasualDateParser = require('./ES/ESCasualDateParser').Parser;\nexports.ESDeadlineFormatParser = require('./ES/ESDeadlineFormatParser').Parser;\nexports.ESTimeAgoFormatParser = require('./ES/ESTimeAgoFormatParser').Parser;\nexports.ESTimeExpressionParser = require('./ES/ESTimeExpressionParser').Parser;\nexports.ESWeekdayParser = require('./ES/ESWeekdayParser').Parser;\nexports.ESMonthNameLittleEndianParser = require('./ES/ESMonthNameLittleEndianParser').Parser;\nexports.ESSlashDateFormatParser = require('./ES/ESSlashDateFormatParser').Parser;\n\nexports.FRCasualDateParser = require('./FR/FRCasualDateParser').Parser;\nexports.FRDeadlineFormatParser = require('./FR/FRDeadlineFormatParser').Parser;\nexports.FRMonthNameLittleEndianParser = require('./FR/FRMonthNameLittleEndianParser').Parser;\nexports.FRSlashDateFormatParser = require('./FR/FRSlashDateFormatParser').Parser;\nexports.FRTimeAgoFormatParser = require('./FR/FRTimeAgoFormatParser').Parser;\nexports.FRTimeExpressionParser = require('./FR/FRTimeExpressionParser').Parser;\nexports.FRWeekdayParser = require('./FR/FRWeekdayParser').Parser;\n\nexports.ZHHantDateParser = require('./ZH-Hant/ZHHantDateParser').Parser;\nexports.ZHHantWeekdayParser = require('./ZH-Hant/ZHHantWeekdayParser').Parser;\nexports.ZHHantTimeExpressionParser = require('./ZH-Hant/ZHHantTimeExpressionParser').Parser;\nexports.ZHHantCasualDateParser = require('./ZH-Hant/ZHHantCasualDateParser').Parser;\nexports.ZHHantDeadlineFormatParser = require('./ZH-Hant/ZHHantDeadlineFormatParser').Parser;\n\n","\nexports.Refiner = function Refiner() { \n\n    this.refine = function(text, results, opt) { return results; };\n}\n\nexports.Filter = function Filter() { \n    \n    exports.Refiner.call(this);\n\n    this.isValid = function(text, result, opt) { return true; }\n    this.refine = function(text, results, opt) { \n\n        var filteredResult = [];\n        for (var i=0; i < results.length; i++) {\n\n            var result = results[i];\n            if (this.isValid(text, result, opt)) {\n                filteredResult.push(result);\n            }\n        }\n\n        return filteredResult;\n    }\n}\n\n\n// Common refiners\nexports.OverlapRemovalRefiner = require('./OverlapRemovalRefiner').Refiner;\nexports.ExtractTimezoneOffsetRefiner = require('./ExtractTimezoneOffsetRefiner').Refiner;\nexports.ExtractTimezoneAbbrRefiner = require('./ExtractTimezoneAbbrRefiner').Refiner;\nexports.ForwardDateRefiner = require('./ForwardDateRefiner').Refiner;\nexports.UnlikelyFormatFilter = require('./UnlikelyFormatFilter').Refiner;\n\n// EN refiners\nexports.ENMergeDateTimeRefiner = require('./EN/ENMergeDateTimeRefiner').Refiner;\nexports.ENMergeDateRangeRefiner = require('./EN/ENMergeDateRangeRefiner').Refiner;\n\n// JP refiners\nexports.JPMergeDateRangeRefiner = require('./JP/JPMergeDateRangeRefiner').Refiner;\n\n// FR refiners\nexports.FRMergeDateRangeRefiner = require('./FR/FRMergeDateRangeRefiner').Refiner;\nexports.FRMergeDateTimeRefiner = require('./FR/FRMergeDateTimeRefiner').Refiner;","var moment = require('moment');\n\nfunction ParsedResult(result){\n    result = result || {};\n\n    this.ref   = result.ref;\n    this.index = result.index;\n    this.text  = result.text;\n    this.tags  = result.tags || {};\n\n    this.start = new ParsedComponents(result.start, result.ref)\n    if(result.end){\n        this.end = new ParsedComponents(result.end, result.ref)\n    }\n}\n\nParsedResult.prototype.clone = function() {\n    var result = new ParsedResult(this);\n    result.tags = JSON.parse(JSON.stringify(this.tags));\n    result.start = this.start.clone();\n    if (this.end) {\n        result.end = this.end.clone();\n    }\n}\n\nParsedResult.prototype.hasPossibleDates = function() {\n    return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n}\n\n\nfunction ParsedComponents (components, ref){\n\n    this.knownValues = {};\n    this.impliedValues = {};\n\n    if (components) {\n        for (key in components) {\n            this.knownValues[key] = components[key];\n        }\n    }\n\n    if (ref) {\n        ref = moment(ref);\n        this.imply('day', ref.date())\n        this.imply('month', ref.month() + 1)\n        this.imply('year', ref.year())\n    }\n    \n\n    this.imply('hour', 12);\n    this.imply('minute', 0);\n    this.imply('second', 0);\n    this.imply('millisecond', 0);\n}\n\nParsedComponents.prototype.clone = function () {\n    var component = new ParsedComponents();\n    component.knownValues = JSON.parse(JSON.stringify(this.knownValues));\n    component.impliedValues = JSON.parse(JSON.stringify(this.impliedValues));\n    return component;\n};\n\nParsedComponents.prototype.get = function(component, value) {\n    if (component in this.knownValues) return this.knownValues[component];\n    if (component in this.impliedValues) return this.impliedValues[component];\n};\n\nParsedComponents.prototype.assign = function(component, value) {\n    this.knownValues[component] = value;\n    delete this.impliedValues[component];\n};\n\nParsedComponents.prototype.imply = function(component, value) {\n    if (component in this.knownValues) return;\n    this.impliedValues[component] = value;\n};\n\nParsedComponents.prototype.isCertain = function(component) {\n    return component in this.knownValues;\n};\n\nParsedComponents.prototype.isPossibleDate = function() {\n    var dateMoment = this.moment();\n    if (this.isCertain('timezoneOffset')) {\n        dateMoment.utcOffset(this.get('timezoneOffset'))\n    }\n\n    if (dateMoment.get('year') != this.get('year')) return false;\n    if (dateMoment.get('month') != this.get('month')-1) return false;\n    if (dateMoment.get('date') != this.get('day')) return false;\n    if (dateMoment.get('hour') != this.get('hour')) return false;\n    if (dateMoment.get('minute') != this.get('minute')) return false;\n\n    return true;\n};\n\nParsedComponents.prototype.date = function() {\n    var dateMoment = this.moment();\n    return dateMoment.toDate();\n};\n\nParsedComponents.prototype.moment = function() {\n    var dateMoment = moment();\n\n    dateMoment.set('year', this.get('year'));\n    dateMoment.set('month', this.get('month')-1);\n    dateMoment.set('date', this.get('day'));\n    dateMoment.set('hour', this.get('hour'));\n    dateMoment.set('minute', this.get('minute'));\n    dateMoment.set('second', this.get('second'));\n    dateMoment.set('millisecond', this.get('millisecond'));\n\n    // Javascript Date Object return minus timezone offset\n    var currentTimezoneOffset = dateMoment.utcOffset();\n    var targetTimezoneOffset = this.isCertain('timezoneOffset') ? \n        this.get('timezoneOffset') : currentTimezoneOffset;\n\n    var adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n    dateMoment.add(-adjustTimezoneOffset, 'minutes');\n\n    return dateMoment;\n};\n\n\n\nexports.ParsedComponents = ParsedComponents;\nexports.ParsedResult = ParsedResult;\n","/*\n    ISO 8601\n    http://www.w3.org/TR/NOTE-datetime\n    - YYYY-MM-DD\n    - YYYY-MM-DDThh:mmTZD\n    - YYYY-MM-DDThh:mm:ssTZD\n    - YYYY-MM-DDThh:mm:ss.sTZD \n    - TZD = (Z or +hh:mm or -hh:mm)\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' \n            + '([0-9]{4})\\\\-([0-9]{1,2})\\\\-([0-9]{1,2})'\n            + '(?:T' //..\n                + '([0-9]{1,2}):([0-9]{1,2})' // hh:mm\n                + '(?::([0-9]{1,2})(?:\\\\.(\\\\d{1,4}))?)?' // :ss.s\n                + '(?:Z|([+-]\\\\d{2}):?(\\\\d{2})?)?' // TZD (Z or ±hh:mm or ±hhmm or ±hh)\n            + ')?'  //..\n            + '(?=\\\\W|$)', 'i');\n\nvar YEAR_NUMBER_GROUP = 2;\nvar MONTH_NUMBER_GROUP = 3;\nvar DATE_NUMBER_GROUP  = 4;\nvar HOUR_NUMBER_GROUP  = 5;\nvar MINUTE_NUMBER_GROUP = 6;\nvar SECOND_NUMBER_GROUP = 7;\nvar MILLISECOND_NUMBER_GROUP = 8;\nvar TZD_HOUR_OFFSET_GROUP = 9;\nvar TZD_MINUTE_OFFSET_GROUP = 10;\n\nexports.Parser = function ENISOFormatParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        })\n        \n        result.start.assign('year', parseInt(match[YEAR_NUMBER_GROUP]));\n        result.start.assign('month', parseInt(match[MONTH_NUMBER_GROUP]));\n        result.start.assign('day', parseInt(match[DATE_NUMBER_GROUP]));\n\n        if (moment(result.start.get('month')) > 12 || moment(result.start.get('month')) < 1 ||\n            moment(result.start.get('day')) > 31 || moment(result.start.get('day')) < 1) {\n            return null;\n        }\n\n        if (match[HOUR_NUMBER_GROUP] != null) {\n            \n            result.start.assign('hour',\n                    parseInt(match[HOUR_NUMBER_GROUP]));\n            result.start.assign('minute',\n                    parseInt(match[MINUTE_NUMBER_GROUP]));\n\n            if (match[SECOND_NUMBER_GROUP] != null) {\n\n                result.start.assign('second',\n                        parseInt(match[SECOND_NUMBER_GROUP]));\n            }\n\n            if (match[MILLISECOND_NUMBER_GROUP] != null) {\n\n                result.start.assign('millisecond',\n                        parseInt(match[MILLISECOND_NUMBER_GROUP]));\n            }\n\n            if (match[TZD_HOUR_OFFSET_GROUP] == null) {\n\n                result.start.assign('timezoneOffset', 0);\n            } else {\n\n                var minuteOffset = 0;\n                var hourOffset = parseInt(match[TZD_HOUR_OFFSET_GROUP]);\n                if (match[TZD_MINUTE_OFFSET_GROUP] != null)\n                    minuteOffset = parseInt(match[TZD_MINUTE_OFFSET_GROUP]);\n\n                var offset = hourOffset * 60;\n                if (offset < 0) {\n                    offset -= minuteOffset;\n                } else {\n                    offset += minuteOffset;\n                }\n\n                result.start.assign('timezoneOffset', offset);\n            }\n        }\n        \n        result.tags['ENISOFormatParser'] = true;\n        return result;\n    };\n\n}\n\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nexports.Parser = function ENDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'a' || num === 'an'){\n            num = 1;\n        } else if (num.match(/few/i)){\n            num = 3;\n        } else if (num.match(/half/i)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n        if (match[4].match(/day|week|month|year/i)) {\n\n            if (match[4].match(/day/i)) {\n                date.add(num, 'd');\n            } else if (match[4].match(/week/i)) {\n                date.add(num * 7, 'd');\n            } else if (match[4].match(/month/i)) {\n                date.add(num, 'month');\n            } else if (match[4].match(/year/i)) {\n                date.add(num, 'year');\n            }\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n        if (match[4].match(/hour/i)) {\n\n            date.add(num, 'hour');\n\n        } else if (match[4].match(/min/i)) {\n\n            date.add(num, 'minute');\n\n        } else if (match[4].match(/second/i)) {\n\n            date.add(num, 'second');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.start.assign('second', date.second());\n        result.tags['ENDeadlineFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:on\\\\s*?)?' +\n        '(?:(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\\\s*,?\\\\s*)?' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN + ')' +\n        '(?:\\\\s*' +\n            '(?:to|\\\\-|\\\\–|until|through|till|\\\\s)\\\\s*' +\n            '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN + ')' +\n        ')?\\\\s*(?:of)?\\\\s*' +\n        '(Jan(?:uary|\\\\.)?|Feb(?:ruary|\\\\.)?|Mar(?:ch|\\\\.)?|Apr(?:il|\\\\.)?|May|Jun(?:e|\\\\.)?|Jul(?:y|\\\\.)?|Aug(?:ust|\\\\.)?|Sep(?:tember|\\\\.)?|Oct(?:ober|\\\\.)?|Nov(?:ember|\\\\.)?|Dec(?:ember|\\\\.)?)' +\n        '(?:' +\n            ',?\\\\s*([0-9]{1,4}(?![^\\\\s]\\\\d))' +\n            '(\\\\s*(?:BE|AD|BC))?' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_NUM_GROUP = 4;\nvar DATE_TO_GROUP = 5;\nvar DATE_TO_NUM_GROUP = 6;\nvar MONTH_NAME_GROUP = 7;\nvar YEAR_GROUP = 8;\nvar YEAR_BE_GROUP = 9;\n\nexports.Parser = function ENMonthNameLittleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_NUM_GROUP] ?\n            parseInt(match[DATE_NUM_GROUP]):\n            util.ORDINAL_WORDS[match[DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n\n                if (/BE/i.test(match[YEAR_BE_GROUP])) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (/BC/i.test(match[YEAR_BE_GROUP])) {\n                    // Before Christ\n                    year = -year;\n                }\n\n            } else if (year < 10) {\n\n                // require single digit years to always have BC/AD\n                return null;\n\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n            refMoment.year(moment(ref).year());\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = match[DATE_TO_NUM_GROUP] ?\n                parseInt(match[DATE_TO_NUM_GROUP]):\n                util.ORDINAL_WORDS[match[DATE_TO_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['ENMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n};\n","/*\n\n    The parser for parsing US's date format that begin with month's name.\n\n    EX.\n        - January 13\n        - January 13, 2012\n        - January 13 - 15, 2012\n        - Tuesday, January 13, 2012\n\n    Watch out for:\n        - January 12:00\n        - January 12.44\n        - January 1222344\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun\\\\.?|Mon\\\\.?|Tue\\\\.?|Wed\\\\.?|Thu\\\\.?|Fri\\\\.?|Sat\\\\.?)' +\n    '\\\\s*,?\\\\s*)?' +\n    '(Jan\\\\.?|January|Feb\\\\.?|February|Mar\\\\.?|March|Apr\\\\.?|April|May\\\\.?|Jun\\\\.?|June|Jul\\\\.?|July|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Oct\\\\.?|October|Nov\\\\.?|November|Dec\\\\.?|December)' +\n    '\\\\s*' +\n    '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN +')\\\\s*' +\n    '(?:' +\n        '(?:to|\\\\-)\\\\s*' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?| ' + util.ORDINAL_WORDS_PATTERN + ')\\\\s*' +\n    ')?' +\n    '(?:' +\n        '\\\\s*,?\\\\s*(?:([0-9]{4})\\\\s*(BE|AD|BC)?|([0-9]{1,4})\\\\s*(AD|BC))\\\\s*' +\n    ')?' +\n    '(?=\\\\W|$)(?!\\\\:\\\\d)', 'i');\n\nvar WEEKDAY_GROUP = 2;\nvar MONTH_NAME_GROUP = 3;\nvar DATE_GROUP = 4;\nvar DATE_NUM_GROUP = 5;\nvar DATE_TO_GROUP = 6;\nvar DATE_TO_NUM_GROUP = 7;\nvar YEAR_GROUP = 8;\nvar YEAR_BE_GROUP = 9;\nvar YEAR_GROUP2 = 10;\nvar YEAR_BE_GROUP2 = 11;\n\nexports.Parser = function ENMonthNameMiddleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n        var day = match[DATE_NUM_GROUP] ?\n            parseInt(match[DATE_NUM_GROUP]) :\n            util.ORDINAL_WORDS[match[DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP] || match[YEAR_GROUP2]) {\n            year = match[YEAR_GROUP] || match[YEAR_GROUP2];\n            year = parseInt(year);\n\n            var yearBE = match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2];\n            if (yearBE) {\n                if (/BE/i.test(yearBE)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (/BC/i.test(yearBE)) {\n                    // Before Christ\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as 'January 12 - 13, 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = match[DATE_TO_NUM_GROUP] ?\n                endDate = parseInt(match[DATE_TO_NUM_GROUP]) :\n                util.ORDINAL_WORDS[match[DATE_TO_GROUP].replace('-', ' ').trim().toLowerCase()];\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['ENMonthNameMiddleEndianParser'] = true;\n        return result;\n    }\n};","/*\n    \n    The parser for parsing month name and year.\n    \n    EX. \n        - January\n        - January 2012\n        - January, 2012\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n    '(Jan\\\\.?|January|Feb\\\\.?|February|Mar\\\\.?|March|Apr\\\\.?|April|May\\\\.?|Jun\\\\.?|June|Jul\\\\.?|July|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Oct\\\\.?|October|Nov\\\\.?|November|Dec\\\\.?|December)' + \n    '\\\\s*' +\n    '(?:' +\n        ',?\\\\s*([0-9]{4})(\\\\s*BE|AD|BC)?' +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|$)', 'i');\n\nvar MONTH_NAME_GROUP = 2;\nvar YEAR_GROUP = 3;\nvar YEAR_BE_GROUP = 4;\n\nexports.Parser = function ENMonthNameParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        \n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = 1;\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (match[YEAR_BE_GROUP].match(/BE/)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (match[YEAR_BE_GROUP].match(/BC/)) {\n                    // Before Christ\n                    year = -year;\n                }\n\n            } else if (year < 100){ \n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            \n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){  \n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){ \n                refMoment = lastYear;\n            }\n\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        result.tags['ENMonthNameParser'] = true;\n        return result;\n    }\n}\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015\n    - 11/3/2015\n    - 11/3\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '((?:sun|mon|tues?|wed(?:nes)?|thu(?:rs?)?|fri|sat(?:ur)?)(?:day)?)' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thur': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\nvar WEEKDAY_GROUP = 2;\nvar MONTH_GROUP = 3;\nvar DAY_GROUP = 4;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function ENSlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['ENSlashDateFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n    Date format with slash \"/\" between numbers like ENSlashDateFormatParser,\n    but this parser expect year before month and date. \n    - YYYY/MM/DD\n    - YYYY-MM-DD\n    - YYYY.MM.DD\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' \n            + '([0-9]{4})[\\\\-\\\\.\\\\/]([0-9]{1,2})[\\\\-\\\\.\\\\/]([0-9]{1,2})'\n            + '(?=\\\\W|$)', 'i');\n\nvar YEAR_NUMBER_GROUP = 2;\nvar MONTH_NUMBER_GROUP = 3;\nvar DATE_NUMBER_GROUP  = 4;\n\nexports.Parser = function ENSlashDateFormatStartWithYearParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        })\n        \n        result.start.assign('year', parseInt(match[YEAR_NUMBER_GROUP]));\n        result.start.assign('month', parseInt(match[MONTH_NUMBER_GROUP]));\n        result.start.assign('day', parseInt(match[DATE_NUMBER_GROUP]));\n\n        if (moment(result.start.get('month')) > 12 || moment(result.start.get('month')) < 1 ||\n            moment(result.start.get('day')) > 31 || moment(result.start.get('day')) < 1) {\n            return null;\n        }\n        \n        result.tags['ENDateFormatParser'] = true;\n        return result;\n    };\n}\n","/*\n    Month/Year date format with slash \"/\" (also \"-\" and \".\") between numbers \n    - 11/05\n    - 06/2005\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(^|[^\\\\d/]\\\\s+|[^\\\\w\\\\s])' +\n    '([0-9]|0[1-9]|1[012])/([0-9]{4})' + \n    '([^\\\\d/]|$)', 'i');\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 4;\n\nvar MONTH_GROUP = 2;\nvar YEAR_GROUP = 3;\n\nexports.Parser = function ENSlashMonthFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n        \n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - (1 + match[ENDING_GROUP].length)).trim();\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        var date = null;\n        var year = match[YEAR_GROUP] ;\n        var month = match[MONTH_GROUP];\n        var day   = 1;\n        \n        month = parseInt(month);\n        year = parseInt(year);\n\n        result.start.imply('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        result.tags['ENSlashMonthFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('' +\n    '(\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '(' + util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|weeks?|days?|months?|years?)\\\\s*' +\n    '(?:ago|before|earlier)(?=(?:\\\\W|$))', 'i');\n\nvar STRICT_PATTERN = new RegExp('' +\n    '(\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '([0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*' +\n    'ago(?=(?:\\\\W|$))', 'i');\n\nexports.Parser = function ENTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[2].toLowerCase() ;\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if(num === 'a' || num === 'an'){\n            num = 1;\n        } else if (num.match(/few/)) {\n            num = 3;\n        } else if (num.match(/half/)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n\n        if (match[3].match(/hour|min|second/i)) {\n            if (match[3].match(/hour/i)) {\n\n                date.add(-num, 'hour');\n\n            } else if (match[3].match(/min/i)) {\n\n                date.add(-num, 'minute');\n\n            } else if (match[3].match(/second/i)) {\n\n                date.add(-num, 'second');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.start.assign('second', date.second());\n            result.tags['ENTimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (match[3].match(/week/i)) {\n            date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (match[3].match(/day/i)) {\n            date.add(-num, 'd');\n        }\n\n        if (match[3].match(/month/i)) {\n            date.add(-num, 'month');\n        }\n\n        if (match[3].match(/year/i)) {\n\n            date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:at|from)\\\\s*)?\" + \n    \"(\\\\d{1,4}|noon|midnight)\" + \n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" + \n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|to|\\\\?)\\\\s*\" + \n    \"(\\\\d{1,4})\" +\n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\n\nexports.Parser = function ENTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['ENTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n        \n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n        \n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase() == \"noon\"){\n            meridiem = 1; \n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"midnight\") {\n            meridiem = 0; \n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n        \n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){ \n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) { \n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        } \n        \n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n\n        // ----- AM & PM  \n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0; \n                if(hour == 12) hour = 0;\n            }\n            \n            if(ampm == \"p\"){\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n        } \n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n        \n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) { \n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n        \n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n            \n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n            \n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n        \n        // ----- AM & PM \n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0; \n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n            \n            if(ampm == \"p\"){\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n            \n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n                    \n                    result.start.imply('meridiem', 0);\n                    \n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n                    \n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12); \n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n        \n        return result;\n    }\n}\n","/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'tues':2, 'tue':2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thurs':4, 'thur': 4, 'thu': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:on\\\\s*?)?' +\n    '(?:(this|last|next)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(this|last|next)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\n\nexports.updateParsedComponent = function updateParsedComponent(result, ref, offset, modifyer) {\n\n    var startMoment = moment(ref);\n    var startMomentFixed = false;\n    var refOffset = startMoment.day();\n\n    if(modifyer == 'last') {\n        startMoment.day(offset - 7);\n        startMomentFixed = true;\n    } else if(modifyer == 'next') {\n        startMoment.day(offset + 7);\n        startMomentFixed = true;\n    } else if(modifyer == 'this') {\n        startMoment.day(offset);\n    } else {\n        if (Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment.day(offset - 7);\n        } else if (Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment.day(offset + 7);\n        } else {\n            startMoment.day(offset);\n        }\n    }\n\n    result.start.assign('weekday', offset);\n    if (startMomentFixed) {\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n        result.start.assign('year', startMoment.year());\n    } else {\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n    }\n\n    return result;\n};\n\n\nexports.Parser = function ENWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) {\n            return null;\n        }\n\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n\n        exports.updateParsedComponent(result, ref, offset, norm);\n        result.tags['ENWeekdayParser'] = true;\n\n        return result;\n    }\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(now|today|tonight|last\\s*night|(?:this|tomorrow|tmr|yesterday)\\s*(morning|afternoon|evening)|tomorrow|tmr|yesterday)(?=\\W|$)/i;\n\nexports.Parser = function ENCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n        var lowerText = text.toLowerCase();\n\n        if(lowerText == 'tonight'){\n            // Normally means this coming midnight\n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n\n        } else if (/^tomorrow|^tmr/.test(lowerText)) {\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n\n        } else if (/^yesterday/.test(lowerText)) {\n\n            startMoment.add(-1, 'day');\n\n        } else if(lowerText.match(/last\\s*night/)) {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"now\")) {\n\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n\n        }\n\n        if (match[3]) {\n            var secondMatch = match[3].toLowerCase();\n            if (secondMatch == \"afternoon\") {\n\n                result.start.imply('hour', 15);\n\n            } else if (secondMatch == \"evening\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"morning\") {\n\n                result.start.imply('hour', 6);\n            }\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['ENCasualDateParser'] = true;\n        return result;\n    }\n}","/*\n    \n    \n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util  = require('../../utils/JP'); \nvar PATTERN = /(?:(同|((昭和|平成)?([0-9０-９]{2,4})))年\\s*)?([0-9０-９]{1,2})月\\s*([0-9０-９]{1,2})日/i;\n  \nvar YEAR_GROUP        = 2;\nvar ERA_GROUP         = 3;\nvar YEAR_NUMBER_GROUP = 4;\nvar MONTH_GROUP       = 5;\nvar DAY_GROUP         = 6;\n\nexports.Parser = function JPStandardParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n\n        var startMoment = moment(ref);\n        var result = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref: ref,\n        });\n        \n        var month = match[MONTH_GROUP];\n        month = util.toHankaku(month);\n        month = parseInt(month);\n\n        var day = match[DAY_GROUP];\n        day = util.toHankaku(day);\n        day = parseInt(day);\n\n        startMoment.set('date', day);\n        startMoment.set('month', month - 1);\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n            \n        if (!match[YEAR_GROUP]) {\n            \n            //Find the most appropriated year\n            startMoment.year(moment(ref).year());\n            var nextYear = startMoment.clone().add(1, 'y');\n            var lastYear = startMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(startMoment.diff(moment(ref))) ){  \n                startMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(startMoment.diff(moment(ref))) ){ \n                startMoment = lastYear;\n            }\n\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.imply('year', startMoment.year());\n\n        } else if (match[YEAR_GROUP].match('同年')) {\n\n            result.start.assign('year', startMoment.year());\n\n        } else {\n            var year = match[YEAR_NUMBER_GROUP];\n            year = util.toHankaku(year);\n            year = parseInt(year);\n\n            if (match[ERA_GROUP] == '平成') {\n                year += 1988;\n            } else if (match[ERA_GROUP] == '昭和') {\n                year += 1925;\n            }\n\n            result.start.assign('year', year);\n        }\n        \n\n        result.tags['JPStandardParser'] = true;\n        return result;\n    };\n\n}\n\n","/*\n    \n    \n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /今日|当日|昨日|明日|今夜|今夕|今晩|今朝/i;\n\nexports.Parser = function JPCasualDateParser(){\n    \n    Parser.apply(this, arguments);\n        \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        var index = match.index;\n        var text = match[0];\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n\n        if(text == '今夜' || text == '今夕' || text == '今晩'){\n            // Normally means this coming midnight \n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n\n        } else if(text == '明日'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 4) {\n                startMoment.add(1, 'day');\n            }\n\n        } else if(text == '昨日') {\n\n            startMoment.add(-1, 'day');\n\n        } else if (text.match(\"今朝\")) {\n\n            result.start.imply('hour', 6);\n            result.start.imply('meridiem', 0);\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['JPCasualDateParser'] = true;\n        return result;\n    }\n}\n\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\n/*\n  Valid patterns:\n  - esta mañana -> today in the morning\n  - esta tarde -> today in the afternoon/evening\n  - esta noche -> tonight\n  - ayer por la mañana -> yesterday in the morning\n  - ayer por la tarde -> yesterday in the afternoon/evening\n  - ayer por la noche -> yesterday at night\n  - mañana por la mañana -> tomorrow in the morning\n  - mañana por la tarde -> tomorrow in the afternoon/evening\n  - mañana por la noche -> tomorrow at night\n  - anoche -> tomorrow at night\n  - hoy -> today\n  - ayer -> yesterday\n  - mañana -> tomorrow\n */\nvar PATTERN = /(\\W|^)(ahora|esta\\s*(mañana|tarde|noche)|(ayer|mañana)\\s*por\\s*la\\s*(mañana|tarde|noche)|hoy|mañana|ayer|anoche)(?=\\W|$)/i;\n\nexports.Parser = function ESCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n        var lowerText = text.toLowerCase().replace(/\\s+/g, ' ');\n\n        if(lowerText == 'mañana'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n\n        } else if(lowerText == 'ayer') {\n\n            startMoment.add(-1, 'day');\n        }\n        else if(lowerText == 'anoche') {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"esta\")) {\n\n            var secondMatch = match[3].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"mañana\") {\n\n                result.start.imply('hour', 6);\n\n            } else if (secondMatch == \"noche\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n        } else if (lowerText.match(/por\\s*la/)) {\n\n            var firstMatch = match[4].toLowerCase();\n            if (firstMatch === 'ayer') {\n\n              startMoment.add(-1, 'day');\n\n            } else if (firstMatch === 'mañana') {\n\n              startMoment.add(1, 'day');\n\n            }\n\n            var secondMatch = match[5].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"mañana\") {\n\n                result.start.imply('hour', 9);\n\n            } else if (secondMatch == \"noche\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n\n        } else if (lowerText.match(\"ahora\")) {\n\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['ESCasualDateParser'] = true;\n        return result;\n    }\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(dentro\\s*de|en)\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|d[ií]as?)\\s*(?=(?:\\W|$))/i;\n\nexports.Parser = function ESDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[3]);\n        if (isNaN(num)) {\n          if (match[3].match(/medi/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = moment(ref);\n        if (match[4].match(/d[ií]a/)) {\n            date.add(num, 'd');\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n\n        if (match[4].match(/hora/)) {\n\n            date.add(num, 'hour');\n\n        } else if (match[4].match(/minuto/)) {\n\n            date.add(num, 'minute');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.tags['ESDeadlineFormatParser'] = true;\n        return result;\n    };\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)hace\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|semanas?|d[ií]as?|mes(es)?|años?)(?=(?:\\W|$))/i;\n\nexports.Parser = function ESTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    }\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[2]);\n        if (isNaN(num)) {\n          if (match[2].match(/medi/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = moment(ref);\n\n        if (match[3].match(/hora/) || match[3].match(/minuto/)) {\n            if (match[3].match(/hora/)) {\n\n                date.add(-num, 'hour');\n\n            } else if (match[3].match(/minuto/)) {\n\n                date.add(-num, 'minute');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.tags['ESTimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (match[3].match(/semana/)) {\n            date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (match[3].match(/d[ií]a/)) {\n            date.add(-num, 'd');\n        }\n\n        if (match[3].match(/mes/)) {\n            date.add(-num, 'month');\n        }\n\n        if (match[3].match(/año/)) {\n\n            date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:a las?|al?|desde|de)\\\\s*)?\" +\n    \"(\\\\d{1,4}|mediod[ií]a|medianoche)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|a(?:\\s*las)?|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\nexports.Parser = function ESTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['ESTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase().match(/mediod/)){\n            meridiem = 1;\n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"medianoche\") {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0;\n                if(hour == 12) hour = 0;\n            }\n\n            if(ampm == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n        }\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n\n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"a\"){\n                meridiem = 0;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if(hour >= 12) {\n            meridiem = 1;\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar':2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sabado': 6, 'sábado': 6, 'sab': 6,}\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:(este|pasado|pr[oó]ximo)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(este|pasado|pr[óo]ximo)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function ESWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        if (prefix || postfix) {\n            var norm = prefix || postfix;\n            norm = norm.toLowerCase();\n\n            if(norm == 'pasado') {\n                modifier = 'this';\n            }\n            else if(norm == 'próximo' || norm == 'proximo') {\n                modifier = 'next';\n            }\n            else if(norm== 'este') {\n                modifier =  'this';\n            }\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ESWeekdayParser'] = true;\n        return result;\n    }\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util  = require('../../utils/ES');\n\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:(Domingo|Lunes|Martes|Miércoles|Miercoles|Jueves|Viernes|Sábado|Sabado|Dom|Lun|Mar|Mie|Jue|Vie|Sab)\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2})(?:º|ª|°)?' +\n        '(?:\\\\s*(?:desde|de|\\\\-|\\\\–|al?|hasta|\\\\s)\\\\s*([0-9]{1,2})(?:º|ª|°)?)?\\\\s*(?:de)?\\\\s*' +\n        '(Ene(?:ro|\\\\.)?|Feb(?:rero|\\\\.)?|Mar(?:zo|\\\\.)?|Abr(?:il|\\\\.)?|May(?:o|\\\\.)?|Jun(?:io|\\\\.)?|Jul(?:io|\\\\.)?|Ago(?:sto|\\\\.)?|Sep(?:tiembre|\\\\.)?|Oct(?:ubre|\\\\.)?|Nov(?:iembre|\\\\.)?|Dic(?:iembre|\\\\.)?)' +\n        '(?:\\\\s*(?:del?)?(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(\\\\s*[ad]\\\\.?\\\\s*c\\\\.?|a\\\\.?\\\\s*d\\\\.?)?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_TO_GROUP = 4;\nvar MONTH_NAME_GROUP = 5;\nvar YEAR_GROUP = 6;\nvar YEAR_BE_GROUP = 7;\n\nexports.Parser = function ESMonthNameLittleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (/a\\.?\\s*c\\.?/i.test(match[YEAR_BE_GROUP])) {\n                    // antes de Cristo\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n            refMoment.year(moment(ref).year());\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\n        }\n\n        result.tags['ESMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n}","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Martes 3/11/2015\n    - 3/11/2015\n    - 3/11\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '((?:domingo|dom|lunes|lun|martes|mar|mi[ée]rcoles|mie|jueves|jue|viernes|vie|s[áa]bado|sab))' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-1]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar': 2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sábado': 6, 'sabado': 6, 'sab': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\n// in Spanish we use day/month/year\nvar WEEKDAY_GROUP = 2;\nvar MONTH_GROUP = 4;\nvar DAY_GROUP = 3;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function ESSlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if(year > 50){\n                year = year + 1900;\n            }else{\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['ESSlashDateFormatParser'] = true;\n        return result;\n    };\n};","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = /(\\W|^)(maintenant|aujourd'hui|ajd|cette\\s*nuit|la\\s*veille|(demain|hier)(\\s*(matin|soir|aprem|après-midi))?|ce\\s*(matin|soir)|cet\\s*(après-midi|aprem))(?=\\W|$)/i;\r\n\r\nexports.Parser = function FRCasualDateParser(){\r\n\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var text = match[0].substr(match[1].length);\r\n        var index = match.index + match[1].length;\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref,\r\n        });\r\n\r\n        var refMoment = moment(ref);\r\n        var startMoment = refMoment.clone();\r\n        var lowerText = text.toLowerCase();\r\n\r\n        if(lowerText.match(/demain/)){\r\n            // Check not \"Tomorrow\" on late night\r\n            if(refMoment.hour() > 1) {\r\n                startMoment.add(1, 'day');\r\n            }\r\n        } \r\n\r\n        if(lowerText.match(/hier/)) {\r\n            startMoment.add(-1, 'day');\r\n        }\r\n\r\n        if(lowerText.match(/cette\\s*nuit/)){\r\n            // Normally means this coming midnight\r\n            result.start.imply('hour', 22);\r\n            result.start.imply('meridiem', 1);\r\n\r\n        } else if(lowerText.match(/la\\s*veille/)) {\r\n\r\n            result.start.imply('hour', 0);\r\n            if (refMoment.hour() > 6) {\r\n                startMoment.add(-1, 'day');\r\n            }\r\n\r\n        } else if (lowerText.match(/(après-midi|aprem)/)) {\r\n\r\n            result.start.imply('hour', 14);\r\n\r\n        } else if (lowerText.match(/(soir)/)) {\r\n\r\n            result.start.imply('hour', 18);\r\n\r\n        } else if (lowerText.match(/matin/)) {\r\n\r\n            result.start.imply('hour', 8);\r\n\r\n        }  else if (lowerText.match(\"maintenant\")) {\r\n\r\n          result.start.imply('hour', refMoment.hour());\r\n          result.start.imply('minute', refMoment.minute());\r\n          result.start.imply('second', refMoment.second());\r\n          result.start.imply('millisecond', refMoment.millisecond());\r\n\r\n        }\r\n\r\n        result.start.assign('day', startMoment.date())\r\n        result.start.assign('month', startMoment.month() + 1)\r\n        result.start.assign('year', startMoment.year())\r\n        result.tags['FRCasualDateParser'] = true;\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar util  = require('../../utils/FR');\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(dans|en)\\\\s*' +\r\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|une?|(?:\\\\s*quelques)?|demi(?:\\\\s*|-?)?)\\\\s*' +\r\n    '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|années?)\\\\s*' +\r\n    '(?=\\\\W|$)', 'i'\r\n);\r\n\r\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(dans|en)\\\\s*' +\r\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|un?)\\\\s*' +\r\n    '(secondes?|minutes?|heures?|jours?)\\\\s*' +\r\n    '(?=\\\\W|$)', 'i'\r\n);\r\n\r\nexports.Parser = function FRDeadlineFormatParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() {\r\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\r\n    };\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var index = match.index + match[1].length;\r\n        var text  = match[0];\r\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref\r\n        });\r\n\r\n        var num = match[3];\r\n        if (util.INTEGER_WORDS[num] !== undefined) {\r\n            num = util.INTEGER_WORDS[num];\r\n        } else if (num === 'un' || num === 'une'){\r\n            num = 1;\r\n        } else if (num.match(/quelques?/i)){\r\n            num = 3;\r\n        } else if (num.match(/demi-?/i)) {\r\n            num = 0.5;\r\n        } else {\r\n            num = parseInt(num);\r\n        }\r\n\r\n        var date = moment(ref);\r\n        if (match[4].match(/jour|semaine|mois|année/i)) {\r\n\r\n            if (match[4].match(/jour/)) {\r\n                date.add(num, 'd');\r\n            } else if (match[4].match(/semaine/i)) {\r\n                date.add(num * 7, 'd');\r\n            } else if (match[4].match(/mois/i)) {\r\n                date.add(num, 'month');\r\n            } else if (match[4].match(/année/i)) {\r\n                date.add(num, 'year');\r\n            }\r\n\r\n            result.start.assign('year', date.year());\r\n            result.start.assign('month', date.month() + 1);\r\n            result.start.assign('day', date.date());\r\n            return result;\r\n        }\r\n\r\n        if (match[4].match(/heure/i)) {\r\n\r\n            date.add(num, 'hour');\r\n\r\n        } else if (match[4].match(/min/i)) {\r\n\r\n            date.add(num, 'minutes');\r\n\r\n        } else if (match[4].match(/secondes/i)) {\r\n\r\n            date.add(num, 'second');\r\n        }\r\n\r\n        result.start.imply('year', date.year());\r\n        result.start.imply('month', date.month() + 1);\r\n        result.start.imply('day', date.date());\r\n        result.start.assign('hour', date.hour());\r\n        result.start.assign('minute', date.minute());\r\n        result.start.assign('second', date.second());\r\n        result.tags['FRDeadlineFormatParser'] = true;\r\n        return result;\r\n    };\r\n};\r\n","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\n\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar util  = require('../../utils/FR');\r\n\r\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n        '(?:(Dimanche|Lundi|Mardi|mercredi|Jeudi|Vendredi|Samedi|Dim|Lun|Mar|Mer|Jeu|Ven|Sam)\\\\s*,?\\\\s*)?' +\r\n        '([0-9]{1,2})' +\r\n        '(?:\\\\s*(?:au|\\\\-|\\\\–|jusqu\\'au?|\\\\s)\\\\s*([0-9]{1,2})(?:er)?)?\\\\s*(?:de)?\\\\s*' +\r\n        '(Jan(?:vier|\\\\.)?|Fév(?:rier|\\\\.)?|Mars|Avr(?:il|\\\\.)?|Mai|Juin|Juil(?:let|\\\\.)?|Ao[uû]t|Sept(?:embre|\\\\.)?|Oct(?:obre|\\\\.)?|Nov(?:embre|\\\\.)?|déc(?:embre|\\\\.)?)' +\r\n        '(?:\\\\s*(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(?:\\\\s*(AC|[ap]\\\\.?\\\\s*c(?:h(?:r)?)?\\\\.?\\\\s*n\\\\.?))?)?' +\r\n        '(?=\\\\W|$)', 'i'\r\n    );\r\n\r\nvar WEEKDAY_GROUP = 2;\r\nvar DATE_GROUP = 3;\r\nvar DATE_TO_GROUP = 4;\r\nvar MONTH_NAME_GROUP = 5;\r\nvar YEAR_GROUP = 6;\r\nvar YEAR_BE_GROUP = 7;\r\n\r\nexports.Parser = function FRMonthNameLittleEndianParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var result = new ParsedResult({\r\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\r\n            index: match.index + match[1].length,\r\n            ref: ref,\r\n        });\r\n\r\n        var month = match[MONTH_NAME_GROUP];\r\n        month = util.MONTH_OFFSET[month.toLowerCase()];\r\n\r\n        var day = match[DATE_GROUP];\r\n        day = parseInt(day);\r\n\r\n        var year = null;\r\n        if (match[YEAR_GROUP]) {\r\n            year = match[YEAR_GROUP];\r\n            year = parseInt(year);\r\n\r\n            if(match[YEAR_BE_GROUP]){\r\n                if (/a/i.test(match[YEAR_BE_GROUP])) {\r\n                    // Ante Christe natum\r\n                    year = -year;\r\n                }\r\n            } else if (year < 100){\r\n\r\n                year = year + 2000;\r\n            }\r\n        }\r\n\r\n        if(year){\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.assign('year', year);\r\n        } else {\r\n\r\n            // Find the most appropriated year\r\n            var refMoment = moment(ref);\r\n            refMoment.month(month - 1);\r\n            refMoment.date(day);\r\n            refMoment.year(moment(ref).year());\r\n\r\n            var nextYear = refMoment.clone().add(1, 'y');\r\n            var lastYear = refMoment.clone().add(-1, 'y');\r\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\r\n                refMoment = nextYear;\r\n            }\r\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\r\n                refMoment = lastYear;\r\n            }\r\n\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.imply('year', refMoment.year());\r\n        }\r\n\r\n        // Weekday component\r\n        if (match[WEEKDAY_GROUP]) {\r\n            var weekday = match[WEEKDAY_GROUP];\r\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\r\n            result.start.assign('weekday', weekday);\r\n        }\r\n\r\n        // Text can be 'range' value. Such as '12 - 13 janvier 2012'\r\n        if (match[DATE_TO_GROUP]) {\r\n            result.end = result.start.clone();\r\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\r\n        }\r\n\r\n        result.tags['FRMonthNameLittleEndianParser'] = true;\r\n        return result;\r\n    };\r\n}","/*\r\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\r\n    - Martes 3/11/2015\r\n    - 3/11/2015\r\n    - 3/11\r\n*/\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(?:' +\r\n        '((?:dimanche|dim|lundi|lun|mardi|mar|mercredi|mer|jeudi|jeu|vendredi|ven|samedi|sam|le))' +\r\n        '\\\\s*\\\\,?\\\\s*' +\r\n    ')?' +\r\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\r\n    '(?:' +\r\n        '[\\\\/\\\\.\\\\-]' +\r\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\r\n    ')?' +\r\n    '(\\\\W|$)', 'i');\r\n\r\nvar DAYS_OFFSET = { 'dimanche': 0, 'dim': 0, 'lundi': 1, 'lun': 1,'mardi': 2, 'mar':2, 'mercredi': 3, 'mer': 3,\r\n    'jeudi': 4, 'jeu':4, 'vendredi': 5, 'ven': 5,'samedi': 6, 'sam': 6};\r\n\r\n\r\nvar OPENNING_GROUP = 1;\r\nvar ENDING_GROUP = 6;\r\n\r\n// In French we use day/month/year\r\nvar WEEKDAY_GROUP = 2;\r\nvar DAY_GROUP = 3;\r\nvar MONTH_GROUP = 4;\r\nvar YEAR_GROUP = 5;\r\n\r\nexports.Parser = function FRSlashDateFormatParser(argument) {\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function () { return PATTERN; };\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\r\n            // Long skip, if there is some overlapping like:\r\n            // XX[/YY/ZZ]\r\n            // [XX/YY/]ZZ\r\n            match.index += match[0].length\r\n            return;\r\n        }\r\n\r\n        var index = match.index + match[OPENNING_GROUP].length;\r\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\r\n\r\n\r\n        var result = new ParsedResult({\r\n            text: text,\r\n            index: index,\r\n            ref: ref,\r\n        });\r\n\r\n        if(text.match(/^\\d\\.\\d$/)) return;\r\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\r\n\r\n        // MM/dd -> OK\r\n        // MM.dd -> NG\r\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\r\n\r\n        var date = null;\r\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\r\n        var month = match[MONTH_GROUP];\r\n        var day   = match[DAY_GROUP];\r\n\r\n        day  = parseInt(day);\r\n        month = parseInt(month);\r\n        year = parseInt(year);\r\n\r\n        if(month < 1 || month > 12) {\r\n            if(month > 12) {\r\n                // dd/mm/yyyy date format if day looks like a month, and month looks like a day.\r\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\r\n                    // unambiguous\r\n                    var tday = month;\r\n                    month = day;\r\n                    day = tday;\r\n                }\r\n                else {\r\n                    // both month and day are <= 12\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        if(day < 1 || day > 31) return null;\r\n\r\n        if(year < 100){\r\n            if(year > 50){\r\n                year = year + 1900;\r\n            }else{\r\n                year = year + 2000;\r\n            }\r\n        }\r\n\r\n        result.start.assign('day', day);\r\n        result.start.assign('month', month);\r\n        result.start.assign('year', year);\r\n\r\n        // Day of week\r\n        if(match[WEEKDAY_GROUP]) {\r\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\r\n        }\r\n\r\n        result.tags['FRSlashDateFormatParser'] = true;\r\n        return result;\r\n    };\r\n};","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = /(\\W|^)il y a\\s*([0-9]+|une?)\\s*(minutes?|heures?|semaines?|jours?|mois|années?|ans?)(?=(?:\\W|$))/i;\r\n\r\nexports.Parser = function FRTimeAgoFormatParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() {\r\n        return PATTERN;\r\n    }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\r\n\r\n        var text = match[0];\r\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n        index = match.index + match[1].length;\r\n\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref,\r\n        });\r\n        result.tags['FRTimeAgoFormatParser'] = true;\r\n        \r\n        var num = parseInt(match[2]);\r\n        if (isNaN(num)) {\r\n          if (match[2].match(/demi/)) {\r\n            num = 0.5;\r\n          } else {\r\n            num = 1;\r\n          }\r\n        }\r\n\r\n        var date = moment(ref);\r\n\r\n        if (match[3].match(/heure/) || match[3].match(/minute/)) {\r\n            if (match[3].match(/heure/)) {\r\n\r\n                date.add(-num, 'hour');\r\n\r\n            } else if (match[3].match(/minute/)) {\r\n\r\n                date.add(-num, 'minute');\r\n            }\r\n\r\n            result.start.imply('day', date.date());\r\n            result.start.imply('month', date.month() + 1);\r\n            result.start.imply('year', date.year());\r\n            result.start.assign('hour', date.hour());\r\n            result.start.assign('minute', date.minute());\r\n\r\n            return result;\r\n        }\r\n\r\n        if (match[3].match(/semaine/)) {\r\n            date.add(-num, 'week');\r\n\r\n            result.start.imply('day', date.date());\r\n            result.start.imply('month', date.month() + 1);\r\n            result.start.imply('year', date.year());\r\n            result.start.imply('weekday', date.day());\r\n            return result;\r\n        }\r\n\r\n        if (match[3].match(/jour/)) {\r\n            date.add(-num, 'd');\r\n        }\r\n\r\n        if (match[3].match(/mois/)) {\r\n            date.add(-num, 'month');\r\n        }\r\n\r\n        if (match[3].match(/années?|ans?/)) {\r\n\r\n            date.add(-num, 'year');\r\n        }\r\n\r\n        result.start.assign('day', date.date());\r\n        result.start.assign('month', date.month() + 1);\r\n        result.start.assign('year', date.year());\r\n        return result;\r\n\r\n    };\r\n}\r\n","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar ParsedComponents = require('../../result').ParsedComponents;\r\n\r\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\r\n    \"(?:(?:[àa])\\\\s*)?\" +\r\n    \"(\\\\d{1,2}(?:h)?|midi|minuit)\" +\r\n    \"(?:\" +\r\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\r\n        \"(?:\" +\r\n            \"(?:\\\\:|\\\\：|m)(\\\\d{0,2})(?:s)?\" +\r\n        \")?\" +\r\n    \")?\" +\r\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\r\n    \"(?=\\\\W|$)\", 'i');\r\n\r\n\r\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\r\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|[àa]|\\\\?)\\\\s*\" +\r\n    \"(\\\\d{1,2}(?:h)?)\" +\r\n    \"(?:\" +\r\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\r\n        \"(?:\" +\r\n            \"(?:\\\\.|\\\\:|\\\\：|m)(\\\\d{1,2})(?:s)?\" +\r\n        \")?\" +\r\n    \")?\" +\r\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\r\n    \"(?=\\\\W|$)\", 'i');\r\n\r\nvar HOUR_GROUP    = 2;\r\nvar MINUTE_GROUP  = 3;\r\nvar SECOND_GROUP  = 4;\r\nvar AM_PM_HOUR_GROUP = 5;\r\n\r\nexports.Parser = function FRTimeExpressionParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return FIRST_REG_PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\r\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\r\n        var refMoment = moment(ref);\r\n        var result = new ParsedResult();\r\n        result.ref = ref;\r\n        result.index = match.index + match[1].length;\r\n        result.text  = match[0].substring(match[1].length);\r\n        result.tags['FRTimeExpressionParser'] = true;\r\n\r\n        result.start.imply('day',   refMoment.date());\r\n        result.start.imply('month', refMoment.month()+1);\r\n        result.start.imply('year',  refMoment.year());\r\n\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var meridiem = -1;\r\n\r\n        // ----- Second\r\n        if(match[SECOND_GROUP] != null){\r\n            var second = parseInt(match[SECOND_GROUP]);\r\n            if(second >= 60) return null;\r\n\r\n            result.start.assign('second', second);\r\n        }\r\n\r\n        // ----- Hours\r\n        if (match[HOUR_GROUP].toLowerCase() == \"midi\"){\r\n            meridiem = 1;\r\n            hour = 12;\r\n        } else if (match[HOUR_GROUP].toLowerCase() == \"minuit\") {\r\n            meridiem = 0;\r\n            hour = 0;\r\n        } else {\r\n            hour = parseInt(match[HOUR_GROUP]);\r\n        }\r\n\r\n        // ----- Minutes\r\n        if(match[MINUTE_GROUP] != null){\r\n            minute = parseInt(match[MINUTE_GROUP]);\r\n        } else if(hour > 100) {\r\n            minute = hour%100;\r\n            hour   = parseInt(hour/100);\r\n        }\r\n\r\n        if(minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        if(hour > 24) {\r\n            return null;\r\n        }\r\n        if (hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        // ----- AM & PM\r\n        if(match[AM_PM_HOUR_GROUP] != null) {\r\n            if(hour > 12) return null;\r\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\r\n            if(ampm == \"a\"){\r\n                meridiem = 0;\r\n                if(hour == 12) hour = 0;\r\n            }\r\n\r\n            if(ampm == \"p\"){\r\n                meridiem = 1;\r\n                if(hour != 12) hour += 12;\r\n            }\r\n        }\r\n        result.start.assign('hour', hour);\r\n        result.start.assign('minute', minute);\r\n        if (meridiem >= 0) {\r\n            result.start.assign('meridiem', meridiem);\r\n        }\r\n\r\n        // ==============================================================\r\n        //                  Extracting the 'to' chunk\r\n        // ==============================================================\r\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\r\n        if (!match) {\r\n            // Not accept number only result\r\n            if (result.text.match(/^\\d+$/)) {\r\n                return null;\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n\r\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\r\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\r\n            return result;\r\n        }\r\n\r\n        if(result.end == null){\r\n            result.end = new ParsedComponents(null, result.start.date());\r\n        }\r\n\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var meridiem = -1;\r\n\r\n        // ----- Second\r\n        if(match[SECOND_GROUP] != null){\r\n            var second = parseInt(match[SECOND_GROUP]);\r\n            if(second >= 60) return null;\r\n\r\n            result.end.assign('second', second);\r\n        }\r\n\r\n        hour = parseInt(match[2]);\r\n\r\n        // ----- Minute\r\n        if (match[MINUTE_GROUP]!= null) {\r\n\r\n            minute = parseInt(match[MINUTE_GROUP]);\r\n            if(minute >= 60) return result;\r\n\r\n        } else if (hour > 100) {\r\n\r\n            minute = hour%100;\r\n            hour   = parseInt(hour/100);\r\n        }\r\n\r\n        if(minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        if(hour > 24) {\r\n            return null;\r\n        }\r\n        if (hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        // ----- AM & PM\r\n        if (match[AM_PM_HOUR_GROUP] != null){\r\n\r\n            if (hour > 12) return null;\r\n\r\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"a\"){\r\n                meridiem = 0;\r\n                if(hour == 12) {\r\n                    hour = 0;\r\n                    if (!result.end.isCertain('day')) {\r\n                        result.end.imply('day', result.end.get('day') + 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"p\"){\r\n                meridiem = 1;\r\n                if(hour != 12) hour += 12;\r\n            }\r\n\r\n            if (!result.start.isCertain('meridiem')) {\r\n                if (meridiem == 0) {\r\n\r\n                    result.start.imply('meridiem', 0);\r\n\r\n                    if (result.start.get('hour') == 12) {\r\n                        result.start.assign('hour', 0);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    result.start.imply('meridiem', 1);\r\n\r\n                    if (result.start.get('hour') != 12) {\r\n                        result.start.assign('hour', result.start.get('hour') + 12);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else if(hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        result.text = result.text + match[0];\r\n        result.end.assign('hour', hour);\r\n        result.end.assign('minute', minute);\r\n        if (meridiem >= 0) {\r\n            result.end.assign('meridiem', meridiem);\r\n        }\r\n\r\n        if (result.end.date().getTime() < result.start.date().getTime()) {\r\n            result.end.imply('day', result.end.get('day') + 1)\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n\r\n\r\n*/\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\r\n\r\nvar DAYS_OFFSET = { 'dimanche': 0, 'dim': 0, 'lundi': 1, 'lun': 1,'mardi': 2, 'mar':2, 'mercredi': 3, 'mer': 3,\r\n    'jeudi': 4, 'jeu':4, 'vendredi': 5, 'ven': 5,'samedi': 6, 'sam': 6};\r\n\r\nvar PATTERN = new RegExp('(\\\\s|^)' +\r\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\r\n    '(?:(ce)\\\\s*)?' +\r\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\r\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\r\n    '(?:\\\\s*(dernier|prochain)\\\\s*)?' +\r\n    '(?=\\\\W|$)', 'i');\r\n\r\nvar PREFIX_GROUP = 2;\r\nvar WEEKDAY_GROUP = 3;\r\nvar POSTFIX_GROUP = 4;\r\n\r\nexports.Parser = function FRWeekdayParser() {\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; };\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n        var index = match.index + match[1].length;\r\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref\r\n        });\r\n\r\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\r\n        var offset = DAYS_OFFSET[dayOfWeek];\r\n        if(offset === undefined) return null;\r\n\r\n        var modifier = null;\r\n        var prefix = match[PREFIX_GROUP];\r\n        var postfix = match[POSTFIX_GROUP];\r\n        if (prefix || postfix) {\r\n            var norm = prefix || postfix;\r\n            norm = norm.toLowerCase();\r\n\r\n            if(norm == 'dernier') {\r\n                modifier = 'last';\r\n            } else if(norm == 'prochain') {\r\n                modifier = 'next';\r\n            } else if(norm== 'ce') {\r\n                modifier = 'this';\r\n            }\r\n        }\r\n\r\n        updateParsedComponent(result, ref, offset, modifier);\r\n        result.tags['FRWeekdayParser'] = true;\r\n        return result;\r\n    }\r\n};\r\n\r\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d{2,4}|[' + Object.keys(util.NUMBER).join('') + ']{2,4})?' +\n    '(?:\\\\s*)' +\n    '(?:年)?' +\n    '(?:[\\\\s|,|，]*)' +\n    '(\\\\d{1,2}|[' + Object.keys(util.NUMBER).join('') + ']{1,2})' +\n    '(?:\\\\s*)' +\n    '(?:月)' +\n    '(?:\\\\s*)' +\n    '(\\\\d{1,2}|[' + Object.keys(util.NUMBER).join('') + ']{1,2})?' +\n    '(?:\\\\s*)' +\n    '(?:日|號)?'\n);\n\nvar YEAR_GROUP = 1;\nvar MONTH_GROUP = 2;\nvar DAY_GROUP = 3;\n\nexports.Parser = function ZHHantDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        var startMoment = moment(ref);\n        var result = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref: ref,\n        });\n\n        //Month\n        var month = parseInt(match[MONTH_GROUP]);\n        if (isNaN(month)) month = util.zhStringToNumber(match[MONTH_GROUP]);\n        result.start.assign('month', month);\n\n        //Day\n        if (match[DAY_GROUP]) {\n            var day = parseInt(match[DAY_GROUP]);\n            if (isNaN(day)) day = util.zhStringToNumber(match[DAY_GROUP]);\n            result.start.assign('day', day);\n        } else {\n            result.start.imply('day', startMoment.date());\n        }\n\n        //Year\n        if (match[YEAR_GROUP]) {\n            var year = parseInt(match[YEAR_GROUP]);\n            if (isNaN(year)) year = util.zhStringToYear(match[YEAR_GROUP]);\n            result.start.assign('year', year);\n        } else {\n            result.start.imply('year', startMoment.year());\n        }\n\n        result.tags.ZHHantDateParser = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(上|今|下|這|呢)?' +\n    '(?:個)?' +\n    '(?:星期|禮拜)' +\n    '(' + Object.keys(util.WEEKDAY_OFFSET).join('|') + ')'\n);\n\nvar PREFIX_GROUP = 1;\nvar WEEKDAY_GROUP = 2;\n\nexports.Parser = function ZHHantWeekdayParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        var index = match.index;\n        text = match[0];\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP];\n        var offset = util.WEEKDAY_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n\n        if(prefix == '上') {\n            modifier = 'last';\n        } else if(prefix == '下') {\n            modifier = 'next';\n        } else if(prefix == '今' || prefix == '這' || prefix == '呢') {\n            modifier = 'this';\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ZHHantWeekdayParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar patternString1 = '(?:由|從|自)?' +\n    '(?:' +\n    '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar patternString2 = '(?:\\\\s*(?:到|至|\\\\-|\\\\–|\\\\~|\\\\〜)\\\\s*)' +\n    '(?:' +\n    '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar FIRST_REG_PATTERN = new RegExp(patternString1, 'i');\nvar SECOND_REG_PATTERN = new RegExp(patternString2, 'i');\n\nvar DAY_GROUP_1 = 1;\nvar ZH_AM_PM_HOUR_GROUP_1 = 2;\nvar ZH_AM_PM_HOUR_GROUP_2 = 3;\nvar DAY_GROUP_3 = 4;\nvar ZH_AM_PM_HOUR_GROUP_3 = 5;\nvar HOUR_GROUP = 6;\nvar MINUTE_GROUP = 7;\nvar SECOND_GROUP = 8;\nvar AM_PM_HOUR_GROUP = 9;\n\nexports.Parser = function ZHHantTimeExpressionParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return FIRST_REG_PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index;\n        result.text = match[0];\n        result.tags.ZHTimeExpressionParser = true;\n\n        var startMoment = refMoment.clone();\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                startMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else {\n            result.start.imply('day', startMoment.date());\n            result.start.imply('month', startMoment.month() + 1);\n            result.start.imply('year', startMoment.year());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n            if (second >= 60) return null;\n            result.start.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n        var endMoment = startMoment.clone();\n        result.end = new ParsedComponents(null, null);\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  endMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                endMoment.add(-1, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                endMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                endMoment.add(-1, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else {\n            result.end.imply('day', endMoment.date());\n            result.end.imply('month', endMoment.month() + 1);\n            result.end.imply('year', endMoment.year());\n        }\n\n        hour = 0;\n        minute = 0;\n        meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n\n            if (second >= 60) return null;\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp(\n    '(而家|立(?:刻|即)|即刻)|' +\n    '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s|,|，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?', 'i');\n\nvar NOW_GROUP = 1;\nvar DAY_GROUP_1 = 2;\nvar TIME_GROUP_1 = 3;\nvar TIME_GROUP_2 = 4;\nvar DAY_GROUP_3 = 5;\nvar TIME_GROUP_3 = 6;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        text = match[0];\n        var index = match.index;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n\n        if (match[NOW_GROUP]) {\n            result.start.imply('hour', refMoment.hour());\n            result.start.imply('minute', refMoment.minute());\n            result.start.imply('second', refMoment.second());\n            result.start.imply('millisecond', refMoment.millisecond());\n        } else if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            var time1 = match[TIME_GROUP_1];\n\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n\n            if (time1 == '早' || time1 == '朝') {\n                result.start.imply('hour', 6);\n            } else if (time1 == '晚') {\n                result.start.imply('hour', 22);\n                result.start.imply('meridiem', 1);\n            }\n\n        } else if (match[TIME_GROUP_2]) {\n            var timeString2 = match[TIME_GROUP_2];\n            var time2 = timeString2[0];\n            if (time2 == '早' || time2 == '朝' || time2 == '上') {\n                result.start.imply('hour', 6);\n            } else if (time2 == '下' || time2 == '晏') {\n                result.start.imply('hour', 15);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '中') {\n                result.start.imply('hour', 12);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '夜' || time2 == '晚') {\n                result.start.imply('hour', 22);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '凌') {\n                result.start.imply('hour', 0);\n            }\n\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n\n            if (day3 == '明' || day3 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n\n\n            var timeString3 = match[TIME_GROUP_3];\n            if (timeString3) {\n                var time3 = timeString3[0];\n                if (time3 == '早' || time3 == '朝' || time3 == '上') {\n                    result.start.imply('hour', 6);\n                } else if (time3 == '下' || time3 == '晏') {\n                    result.start.imply('hour', 15);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '中') {\n                    result.start.imply('hour', 12);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '夜' || time3 == '晚') {\n                    result.start.imply('hour', 22);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '凌') {\n                    result.start.imply('hour', 0);\n                }\n            }\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags.ZHHantCasualDateParser = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+|半|幾)(?:\\\\s*)' +\n    '(?:個)?' +\n    '(秒(?:鐘)?|分鐘|小時|鐘|日|天|星期|禮拜|月|年)' +\n    '(?:(?:之|過)?後|(?:之)?內)', 'i'\n);\n\nvar NUMBER_GROUP = 1;\nvar UNIT_GROUP = 2;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n      var index = match.index;\n      text  = match[0];\n\n      var result = new ParsedResult({\n          index: index,\n          text: text,\n          ref: ref\n      });\n\n      var number = parseInt(match[NUMBER_GROUP]);\n      if (isNaN(number)){\n        number = util.zhStringToNumber(match[NUMBER_GROUP]);\n      }\n\n      if (isNaN(number)){\n        var string = match[NUMBER_GROUP];\n        if (string === '幾'){\n          number = 3;\n        }else if(string === '半'){\n          number = 0.5;\n        }else{\n\n          //just in case\n          return null;\n        }\n      }\n\n      var date = moment(ref);\n      var unit = match[UNIT_GROUP];\n      var unitAbbr = unit[0];\n\n      if (unitAbbr.match(/[日天星禮月年]/)){\n        if(unitAbbr == '日' || unitAbbr == '天'){\n          date.add(number, 'd');\n        }else if(unitAbbr == '星' || unitAbbr == '禮'){\n          date.add(number * 7, 'd');\n        }else if(unitAbbr == '月'){\n          date.add(number, 'month');\n        }else if(unitAbbr == '年'){\n          date.add(number, 'year');\n        }\n\n        result.start.assign('year', date.year());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('day', date.date());\n        return result;\n      }\n\n      if(unitAbbr == '秒'){\n        date.add(number, 'second');\n      }else if(unitAbbr == '分'){\n        date.add(number, 'minute');\n      }else if(unitAbbr == '小' || unitAbbr == '鐘'){\n        date.add(number, 'hour');\n      }\n\n      result.start.imply('year', date.year());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('day', date.date());\n      result.start.assign('hour', date.hour());\n      result.start.assign('minute', date.minute());\n      result.start.assign('second', date.second());\n      result.tags.ZHHantDeadlineFormatParser = true;\n      return result;\n    };\n};\n","/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function OverlapRemovalRefiner() {\n\tRefiner.call(this);\n\t\n\n\tthis.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n        \n        var filteredResults = [];\n        var prevResult = results[0];\n        \n        for (var i=1; i<results.length; i++){\n            \n            var result = results[i];\n            \n            // If overlap, compare the length and discard the shorter one\n            if (result.index < prevResult.index + prevResult.text.length) {\n\n                if (result.text.length > prevResult.text.length){\n                    prevResult = result;\n                }\n                \n            } else {\n                filteredResults.push(prevResult);\n                prevResult = result;\n            }\n        }\n        \n        // The last one\n        if (prevResult != null) {\n            filteredResults.push(prevResult);\n        }\n\n        return filteredResults;\n    }\n}","/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\n\nvar TIMEZONE_OFFSET_PATTERN = new RegExp(\"^\\\\s*(GMT|UTC)?(\\\\+|\\\\-)(\\\\d{1,2}):?(\\\\d{2})\", 'i');\nvar TIMEZONE_OFFSET_SIGN_GROUP = 2;\nvar TIMEZONE_OFFSET_HOUR_OFFSET_GROUP = 3;\nvar TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP = 4;\n\nexports.Refiner = function ExtractTimezoneOffsetRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        results.forEach(function(result) {\n\n            if (result.start.isCertain('timezoneOffset')) {\n                return;\n            }\n\n            var match = TIMEZONE_OFFSET_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (!match) {\n                return;\n            }\n\n            var hourOffset = parseInt(match[TIMEZONE_OFFSET_HOUR_OFFSET_GROUP]);\n            var minuteOffset = parseInt(match[TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP]);\n            var timezoneOffset = hourOffset * 60 + minuteOffset;\n            if (match[TIMEZONE_OFFSET_SIGN_GROUP] === '-') {\n                timezoneOffset = -timezoneOffset;\n            }\n\n            if (result.end != null) {\n                result.end.assign('timezoneOffset', timezoneOffset);\n            }\n\n            result.start.assign('timezoneOffset', timezoneOffset);\n            result.text += match[0];\n            result.tags['ExtractTimezoneOffsetRefiner'] = true;\n        });\n\n        return results;\n    }\n}\n","/*\n\n*/\nvar Refiner = require('./refiner').Refiner;\n\n// Map ABBR -> Offset in minute\nvar TIMEZONE_ABBR_MAP = {};\nvar TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\n\nexports.Refiner = function ExtractTimezoneAbbrRefiner() {\n\tRefiner.call(this);\n\n\tthis.refine = function(text, results, opt) {\n\n\t\tresults.forEach(function(result) {\n\n            if (!result.tags['ENTimeExpressionParser'] && !result.tags['ZHTimeExpressionParser'] && !result.tags['FRTimeExpressionParser']) {\n                return;\n            }\n\n            var match = TIMEZONE_NAME_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (match) {\n                var timezoneAbbr = match[1].toUpperCase();\n                if (TIMEZONE_ABBR_MAP[timezoneAbbr] === undefined) {\n                    return;\n                }\n\n                var timezoneOffset = TIMEZONE_ABBR_MAP[timezoneAbbr];\n                if (!result.start.isCertain('timezoneOffset')) {\n                    result.start.assign('timezoneOffset', timezoneOffset);\n                }\n\n                if (result.end != null && !result.end.isCertain('timezoneOffset')) {\n                    result.end.assign('timezoneOffset', timezoneOffset);\n                }\n\n                result.text += match[0];\n                result.tags['ExtractTimezoneAbbrRefiner'] = true;\n            }\n\t\t});\n\n        return results;\n\t}\n}\n\n// TODO: Move this to some configuration\nTIMEZONE_ABBR_MAP = {hST\":600,\"DAVT\":420,\"EASST\":-300,\"EAST\":-360,\"EAT\":180,\"ECT\":-300,\"EDT\":-240,\"EEST\":180,\"EET\":120,\"EGST\":0,\"EGT\":-60,\"EST\":-300,\"ET\":-300,\"FJST\":780,\"FJT\":720,\"FKST\":-180,\"FKT\":-240,\"FNT\":-120,\"GALT\":-360,\"GAMT\":-540,\"GET\":240,\"GFT\":-180,\"GILT\":720,\"GMT\":0,\"GST\":240,\"GYT\":-240,\"HAA\":-180,\"HAC\":-300,\"HADT\":-540,\"HAE\":-240,\"HAP\":-420,\"HAR\":-360,\"HAST\":-600,\"HAT\":-90,\"HAY\":-480,\"HKT\":480,\"HLV\":-210,\"HNA\":-240,\"HNC\":-360,\"HNE\":-300,\"HNP\":-480,\"HNR\":-420,\"HNT\":-150,\"HNY\":-540,\"HOVT\":420,\"ICT\":420,\"IDT\":180,\"IOT\":360,\"IRDT\":270,\"IRKST\":540,\"IRKT\":540,\"IRST\":210,\"IST\":60,\"JST\":540,\"KGT\":360,\"KRAST\":480,\"KRAT\":480,\"KST\":540,\"KUYT\":240,\"LHDT\":660,\"LHST\":630,\"LINT\":840,\"MAGST\":720,\"MAGT\":720,\"MART\":-510,\"MAWT\":300,\"MDT\":-360,\"MESZ\":120,\"MEZ\":60,\"MHT\":720,\"MMT\":390,\"MSD\":240,\"MSK\":240,\"MST\":-420,\"MUT\":240,\"MVT\":300,\"MYT\":480,\"NCT\":660,\"NDT\":-90,\"NFT\":690,\"NOVST\":420,\"NOVT\":360,\"NPT\":345,\"NST\":-150,\"NUT\":-660,\"NZDT\":780,\"NZST\":720,\"OMSST\":420,\"OMST\":420,\"PDT\":-420,\"PET\":-300,\"PETST\":720,\"PETT\":720,\"PGT\":600,\"PHOT\":780,\"PHT\":480,\"PKT\":300,\"PMDT\":-120,\"PMST\":-180,\"PONT\":660,\"PST\":-480,\"PT\":-480,\"PWT\":540,\"PYST\":-180,\"PYT\":-240,\"RET\":240,\"SAMT\":240,\"SAST\":120,\"SBT\":660,\"SCT\":240,\"SGT\":480,\"SRT\":-180,\"SST\":-660,\"TAHT\":-600,\"TFT\":300,\"TJT\":300,\"TKT\":780,\"TLT\":540,\"TMT\":300,\"TVT\":720,\"ULAT\":480,\"UTC\":0,\"UYST\":-120,\"UYT\":-180,\"UZT\":300,\"VET\":-210,\"VLAST\":660,\"VLAT\":660,\"VUT\":660,\"WAST\":120,\"WAT\":60,\"WEST\":60,\"WESZ\":60,\"WET\":0,\"WEZ\":0,\"WFT\":720,\"WGST\":-120,\"WGT\":-180,\"WIB\":420,\"WIT\":540,\"WITA\":480,\"WST\":780,\"WT\":0,\"YAKST\":600,\"YAKT\":600,\"YAPT\":600,\"YEKST\":360,\"YEKT\":360}\n","/*\n    Enforce 'forwardDate' option to on the results. When there are missing component,\n    e.g. \"March 12-13 (without year)\" or \"Thursday\", the refiner will try to adjust the result\n    into the future instead of the past.\n*/\nvar moment = require('moment');\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function ForwardDateRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        if (!opt['forwardDate'] && !opt['forwardDatesOnly']) {\n            return results;\n        }\n\n        results.forEach(function(result) {\n\n            var refMoment = moment(result.ref);\n\n            if (result.start.isCertain('day') && result.start.isCertain('month') &&\n                !result.start.isCertain('year') &&\n                refMoment.isAfter(result.start.moment())\n            ) {\n                // Adjust year into the future\n                for (var i=0; i < 3 && refMoment.isAfter(result.start.moment()); i++) {\n                    result.start.imply('year', result.start.get('year') + 1);\n\n                    if (result.end && !result.end.isCertain('year')) {\n                        result.end.imply('year', result.end.get('year') + 1);\n                    }\n                }\n\n                result.tags['ExtractTimezoneOffsetRefiner'] = true;\n            }\n\n            if (!result.start.isCertain('day') && !result.start.isCertain('month') && !result.start.isCertain('year') &&\n                result.start.isCertain('weekday') &&\n                refMoment.isAfter(result.start.moment())\n            ) {\n                // Adjust date to the coming week\n                if (refMoment.day() > result.start.get('weekday')) {\n                    refMoment.day(result.start.get('weekday') + 7);\n                } else {\n                    refMoment.day(result.start.get('weekday'));\n                }\n\n                result.start.imply('day', refMoment.date());\n                result.start.imply('month', refMoment.month() + 1);\n                result.start.imply('year', refMoment.year());\n                result.tags['ExtractTimezoneOffsetRefiner'] = true;\n            }\n        });\n\n        return results;\n    }\n};\n","/*\n  \n*/\nvar Filter = require('./refiner').Filter;\n\nexports.Refiner = function UnlikelyFormatFilter() {\n    Filter.call(this);\n    \n\n    this.isValid = function(text, result, opt) { \n\n        if (result.text.replace(' ','').match(/^\\d*(\\.\\d*)?$/)) {\n            return false;\n        }\n\n        return true; \n    }\n}","/*\n    \n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\n\n\nvar PATTERN = new RegExp(\"^\\\\s*(T|at|after|before|on|of|,|-)?\\\\s*$\");\n\nfunction isDateOnly(result) {\n    return !result.start.isCertain('hour');\n}\n    \nfunction isTimeOnly(result) {\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\n}\n\n\nfunction isAbleToMerge(text, prevResult, curResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\n    return textBetween.match(PATTERN);\n}\n\nfunction mergeResult(text, dateResult, timeResult){\n\n    var beginDate = dateResult.start;\n    var beginTime = timeResult.start;\n        \n    var beginDateTime = beginDate.clone();\n    beginDateTime.assign('hour', beginTime.get('hour'));\n    beginDateTime.assign('minute', beginTime.get('minute'));\n    beginDateTime.assign('second', beginTime.get('second'));\n        \n    if (beginTime.isCertain('meridiem')) {\n        beginDateTime.assign('meridiem', beginTime.get('meridiem'));\n    } else if (\n        beginTime.get('meridiem') !== undefined &&\n        beginDateTime.get('meridiem') === undefined\n    ) {\n        beginDateTime.imply('meridiem', beginTime.get('meridiem'));\n    }\n\n    if (beginDateTime.get('meridiem') == 1 && beginDateTime.get('hour') < 12) {\n        beginDateTime.assign('hour', beginDateTime.get('hour') + 12);\n    }\n\n    if (dateResult.end != null || timeResult.end != null) {\n        \n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n\n        var endDateTime = endDate.clone();\n        endDateTime.assign('hour', endTime.get('hour'));\n        endDateTime.assign('minute', endTime.get('minute'));\n        endDateTime.assign('second', endTime.get('second'));\n        \n        if (endTime.isCertain('meridiem')) {\n            endDateTime.assign('meridiem', endTime.get('meridiem'));\n        } else if (beginTime.get('meridiem') != null) {\n            endDateTime.imply('meridiem', endTime.get('meridiem'));\n        }\n        \n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        dateResult.end = endDateTime;\n    }\n\n    dateResult.start = beginDateTime;    \n\n    var startIndex = Math.min(dateResult.index, timeResult.index);\n    var endIndex = Math.max(\n            dateResult.index + dateResult.text.length, \n            timeResult.index + timeResult.text.length);\n    \n    dateResult.index = startIndex;\n    dateResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in timeResult.tags) {\n        dateResult.tags[tag] = true;\n    }\n    dateResult.tags['ENMergeDateAndTimeRefiner'] = true;\n    return dateResult;\n}\n\nexports.Refiner = function ENMergeDateTimeRefiner() {\n    Refiner.call(this);\n\n\n    this.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n                \n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}","/*\n  \n*/\nvar Refiner = require('../refiner').Refiner;\n\nexports.Refiner = function ENMergeDateRangeRefiner() {\n    Refiner.call(this);\n\n    this.pattern = function () { return /^\\s*(to|\\-)\\s*$/i };\n\n    this.refine = function(text, results, opt) {\n\n        if (results.length < 2) return results;\n        \n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n        \n        for (var i=1; i<results.length; i++){\n            \n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (!prevResult.end && !currResult.end \n                && this.isAbleToMerge(text, prevResult, currResult)) {\n              \n                prevResult = this.mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n        \n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n\n        return mergedResult;\n    };\n\n    this.isAbleToMerge = function(text, result1, result2) {\n        var begin = result1.index + result1.text.length;\n        var end   = result2.index;\n        var textBetween = text.substring(begin,end);\n\n        return textBetween.match(this.pattern());\n    };\n\n    this.isWeekdayResult = function (result) {\n        return result.start.isCertain('weekday') && !result.start.isCertain('day');\n    };\n\n    this.mergeResult = function(text, fromResult, toResult) {\n\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\n\n            for (var key in toResult.start.knownValues) {\n                if (!fromResult.start.isCertain(key)) {\n                    fromResult.start.assign(key, toResult.start.get(key));\n                }\n            }\n\n            for (var key in fromResult.start.knownValues) {\n                if (!toResult.start.isCertain(key)) {\n                    toResult.start.assign(key, fromResult.start.get(key));\n                }\n            }\n        }\n\n        if (fromResult.start.date().getTime() > toResult.start.date().getTime()) {\n            var tmp = toResult;\n            toResult = fromResult;\n            fromResult = tmp;\n        }\n        \n        fromResult.end = toResult.start;\n\n        \n\n        for (var tag in toResult.tags) {\n            fromResult.tags[tag] = true;\n        }\n\n            \n        var startIndex = Math.min(fromResult.index, toResult.index);\n        var endIndex = Math.max(\n            fromResult.index + fromResult.text.length, \n            toResult.index + toResult.text.length);\n            \n        fromResult.index = startIndex;\n        fromResult.text  = text.substring(startIndex, endIndex);\n        fromResult.tags[this.constructor.name] = true;\n        return fromResult;\n    }\n};\n\n","/*\n  \n*/\nvar ENMergeDateRangeRefiner = require('../EN/ENMergeDateRangeRefiner').Refiner;\n\nexports.Refiner = function JPMergeDateRangeRefiner() {\n    ENMergeDateRangeRefiner.call(this);\n\n    this.pattern = function () { return /^\\s*(から|ー)\\s*$/i };\n}\n\n","/*\r\n  \r\n*/\r\nvar Refiner = require('../refiner').Refiner;\r\n\r\nexports.Refiner = function FRMergeDateRangeRefiner() {\r\n    Refiner.call(this);\r\n\r\n    this.pattern = function () { return /^\\s*(à|a|\\-)\\s*$/i };\r\n\r\n    this.refine = function(text, results, opt) {\r\n\r\n        if (results.length < 2) return results;\r\n        \r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n        \r\n        for (var i=1; i<results.length; i++){\r\n            \r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (!prevResult.end && !currResult.end \r\n                && this.isAbleToMerge(text, prevResult, currResult)) {\r\n              \r\n                prevResult = this.mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n        \r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n\r\n        return mergedResult;\r\n    };\r\n\r\n    this.isAbleToMerge = function(text, result1, result2) {\r\n        var begin = result1.index + result1.text.length;\r\n        var end   = result2.index;\r\n        var textBetween = text.substring(begin,end);\r\n\r\n        return textBetween.match(this.pattern());\r\n    };\r\n\r\n    this.isWeekdayResult = function (result) {\r\n        return result.start.isCertain('weekday') && !result.start.isCertain('day');\r\n    };\r\n\r\n    this.mergeResult = function(text, fromResult, toResult) {\r\n\r\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\r\n\r\n            for (var key in toResult.start.knownValues) {\r\n                if (!fromResult.start.isCertain(key)) {\r\n                    fromResult.start.assign(key, toResult.start.get(key));\r\n                }\r\n            }\r\n\r\n            for (var key in fromResult.start.knownValues) {\r\n                if (!toResult.start.isCertain(key)) {\r\n                    toResult.start.assign(key, fromResult.start.get(key));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (fromResult.start.date().getTime() > toResult.start.date()) {\r\n            var tmp = toResult;\r\n            toResult = fromResult;\r\n            fromResult = tmp;\r\n        }\r\n        \r\n        fromResult.end = toResult.start;\r\n\r\n        \r\n\r\n        for (var tag in toResult.tags) {\r\n            fromResult.tags[tag] = true;\r\n        }\r\n\r\n            \r\n        var startIndex = Math.min(fromResult.index, toResult.index);\r\n        var endIndex = Math.max(\r\n            fromResult.index + fromResult.text.length, \r\n            toResult.index + toResult.text.length);\r\n            \r\n        fromResult.index = startIndex;\r\n        fromResult.text  = text.substring(startIndex, endIndex);\r\n        fromResult.tags[this.constructor.name] = true;\r\n        return fromResult;\r\n    }\r\n};\r\n\r\n","/*\r\n    \r\n*/\r\nvar ParsedComponents = require('../../result').ParsedComponents;\r\nvar Refiner = require('../refiner').Refiner;\r\n\r\n\r\n\r\nvar PATTERN = new RegExp(\"^\\\\s*(T|à|a|vers|de|,|-)?\\\\s*$\");\r\n\r\nfunction isDateOnly(result) {\r\n    return !result.start.isCertain('hour') || result.tags['FRCasualDateParser'];\r\n}\r\n    \r\nfunction isTimeOnly(result) {\r\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\r\n}\r\n\r\n\r\nfunction isAbleToMerge(text, prevResult, curResult) {\r\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\r\n    return textBetween.match(PATTERN);\r\n}\r\n\r\nfunction mergeResult(text, dateResult, timeResult){\r\n\r\n    var beginDate = dateResult.start;\r\n    var beginTime = timeResult.start;\r\n        \r\n    var beginDateTime = beginDate.clone();\r\n    beginDateTime.assign('hour', beginTime.get('hour'));\r\n    beginDateTime.assign('minute', beginTime.get('minute'));\r\n    beginDateTime.assign('second', beginTime.get('second'));\r\n        \r\n    if (beginTime.isCertain('meridiem')) {\r\n        beginDateTime.assign('meridiem', beginTime.get('meridiem'));\r\n    } else if (\r\n        beginTime.get('meridiem') !== undefined &&\r\n        beginDateTime.get('meridiem') === undefined\r\n    ) {\r\n        beginDateTime.imply('meridiem', beginTime.get('meridiem'));\r\n    }\r\n\r\n    if (beginDateTime.get('meridiem') == 1 && beginDateTime.get('hour') < 12) {\r\n        beginDateTime.assign('hour', beginDateTime.get('hour') + 12);\r\n    }\r\n\r\n    if (dateResult.end != null || timeResult.end != null) {\r\n        \r\n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \r\n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\r\n\r\n        var endDateTime = endDate.clone();\r\n        endDateTime.assign('hour', endTime.get('hour'));\r\n        endDateTime.assign('minute', endTime.get('minute'));\r\n        endDateTime.assign('second', endTime.get('second'));\r\n        \r\n        if (endTime.isCertain('meridiem')) {\r\n            endDateTime.assign('meridiem', endTime.get('meridiem'));\r\n        } else if (beginTime.get('meridiem') != null) {\r\n            endDateTime.imply('meridiem', endTime.get('meridiem'));\r\n        }\r\n        \r\n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\r\n            // Ex. 9pm - 1am\r\n            if (endDateTime.isCertain('day')) {\r\n                endDateTime.assign('day', endDateTime.get('day') + 1);\r\n            } else {\r\n                endDateTime.imply('day', endDateTime.get('day') + 1);\r\n            }\r\n        }\r\n\r\n        dateResult.end = endDateTime;\r\n    }\r\n\r\n    dateResult.start = beginDateTime;    \r\n\r\n    var startIndex = Math.min(dateResult.index, timeResult.index);\r\n    var endIndex = Math.max(\r\n            dateResult.index + dateResult.text.length, \r\n            timeResult.index + timeResult.text.length);\r\n    \r\n    dateResult.index = startIndex;\r\n    dateResult.text  = text.substring(startIndex, endIndex);\r\n\r\n    for (var tag in timeResult.tags) {\r\n        dateResult.tags[tag] = true;\r\n    }\r\n    dateResult.tags['FRMergeDateAndTimeRefiner'] = true;\r\n    return dateResult;\r\n}\r\n\r\nexports.Refiner = function FRMergeDateTimeRefiner() {\r\n    Refiner.call(this);\r\n\r\n\r\n    this.refine = function(text, results, opt) { \r\n\r\n        if (results.length < 2) return results;\r\n\r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n\r\n        for (var i = 1; i < results.length; i++) {\r\n\r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \r\n                    && isAbleToMerge(text, prevResult, currResult)) {\r\n                \r\n                prevResult = mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n                \r\n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\r\n                    && isAbleToMerge(text, prevResult, currResult)) {\r\n                \r\n                prevResult = mergeResult(text, currResult, prevResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n\r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n        return mergedResult;\r\n    }\r\n}","var NUMBER ={\n  '零':0,\n  '一':1,\n  '二':2,\n  '兩':2,\n  '三':3,\n  '四':4,\n  '五':5,\n  '六':6,\n  '七':7,\n  '八':8,\n  '九':9,\n  '十':10,\n  '廿':20,\n  '卅':30,\n};\n\nvar WEEKDAY_OFFSET ={\n  '天':0,\n  '日':0,\n  '一':1,\n  '二':2,\n  '三':3,\n  '四':4,\n  '五':5,\n  '六':6,\n};\n\nexports.NUMBER = NUMBER;\nexports.WEEKDAY_OFFSET = WEEKDAY_OFFSET;\n\nexports.zhStringToNumber=function(text){\n  var number = 0;\n  for(var i=0; i<text.length ;i++){\n    var char = text[i];\n    if(char === '十'){\n      number = number=== 0 ? NUMBER[char] : (number * NUMBER[char]);\n    }else{\n      number += NUMBER[char];\n    }\n  }\n  return number;\n};\n\nexports.zhStringToYear=function(text){\n  var string = '';\n  for(var i=0; i<text.length ;i++){\n    var char = text[i];\n    string = string + NUMBER[char];\n  }\n  return parseInt(string);\n};\n","exports.WEEKDAY_OFFSET = { \n    'sunday': 0, \n    'sun': 0, \n    'monday': 1, \n    'mon': 1,\n    'tuesday': 2, \n    'tue':2, \n    'wednesday': 3, \n    'wed': 3, \n    'thursday': 4, \n    'thur': 4, \n    'thu': 4,\n    'friday': 5, \n    'fri': 5,\n    'saturday': 6, \n    'sat': 6\n};\n    \nexports.MONTH_OFFSET = { \n    'january': 1,\n    'jan': 1,\n    'jan.': 1,\n    'february': 2,\n    'feb': 2,\n    'feb.': 2,\n    'march': 3,\n    'mar': 3,\n    'mar.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'may': 5,\n    'june': 6,\n    'jun': 6,\n    'jun.': 6,\n    'july': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'october': 10,\n    'oct': 10,\n    'oct.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexports.INTEGER_WORDS = {\n    'one' : 1,\n    'two' : 2,\n    'three' : 3,\n    'four' : 4,\n    'five' : 5,\n    'six' : 6,\n    'seven' : 7,\n    'eight' : 8,\n    'nine' : 9,\n    'ten' : 10,\n    'eleven' : 11,\n    'twelve' : 12\n};\nexports.INTEGER_WORDS_PATTERN = '(?:' + Object.keys(exports.INTEGER_WORDS).join('|') +')';\n\nexports.ORDINAL_WORDS = {\n    'first' : 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9,\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19,\n    'twentieth': 20,\n    'twenty first': 21,\n    'twenty second': 22,\n    'twenty third': 23,\n    'twenty fourth': 24,\n    'twenty fifth': 25,\n    'twenty sixth': 26,\n    'twenty seventh': 27,\n    'twenty eighth': 28,\n    'twenty ninth': 29,\n    'thirtieth': 30,\n    'thirty first': 31\n};\nexports.ORDINAL_WORDS_PATTERN = '(?:' + Object.keys(exports.ORDINAL_WORDS).join('|').replace(/ /g, '[ -]') + ')';","\n\n/**\n * to-hankaku.js\n * convert to ascii code strings.\n *\n * @version 1.0.1\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\n \nexports.toHankaku = (function (String, fromCharCode) {\n \n    function toHankaku (string) {\n        return String(string).replace(/\\u2019/g, '\\u0027').replace(/\\u201D/g, '\\u0022').replace(/\\u3000/g, '\\u0020').replace(/\\uFFE5/g, '\\u00A5').replace(/[\\uFF01\\uFF03-\\uFF06\\uFF08\\uFF09\\uFF0C-\\uFF19\\uFF1C-\\uFF1F\\uFF21-\\uFF3B\\uFF3D\\uFF3F\\uFF41-\\uFF5B\\uFF5D\\uFF5E]/g, alphaNum);\n    }\n \n    function alphaNum (token) {\n        return fromCharCode(token.charCodeAt(0) - 65248);\n    }\n \n    return toHankaku;\n})(String, String.fromCharCode);\n\n/**\n * to-zenkaku.js\n * convert to multi byte strings.\n *\n * @version 1.0.2\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\nexports.toZenkaku = (function (String, fromCharCode) {\n \n    function toZenkaku (string) {\n        return String(string).replace(/\\u0020/g, '\\u3000').replace(/\\u0022/g, '\\u201D').replace(/\\u0027/g, '\\u2019').replace(/\\u00A5/g, '\\uFFE5').replace(/[!#-&(),-9\\u003C-?A-[\\u005D_a-{}~]/g, alphaNum);\n    }\n \n    function alphaNum (token) {\n        return fromCharCode(token.charCodeAt(0) + 65248);\n    }\n \n    return toZenkaku;\n})(String, String.fromCharCode);","exports.WEEKDAY_OFFSET = {\n    'domingo': 0,\n    'dom': 0,\n    'lunes': 1,\n    'lun': 1,\n    'martes': 2,\n    'mar':2,\n    'miércoles': 3,\n    'miercoles': 3,\n    'mie': 3,\n    'jueves': 4,\n    'jue': 4,\n    'viernes': 5,\n    'vie': 5,\n    'sábado': 6,\n    'sabado': 6,\n    'sab': 6,}\n\nexports.MONTH_OFFSET = {\n    'enero': 1,\n    'ene': 1,\n    'ene.': 1,\n    'febrero': 2,\n    'feb': 2,\n    'feb.': 2,\n    'marzo': 3,\n    'mar': 3,\n    'mar.': 3,\n    'abril': 4,\n    'abr': 4,\n    'abr.': 4,\n    'mayo': 5,\n    'may': 5,\n    'may.': 5,\n    'junio': 6,\n    'jun': 6,\n    'jun.': 6,\n    'julio': 7,\n    'jul': 7,\n    'jul.': 7,\n    'agosto': 8,\n    'ago': 8,\n    'ago.': 8,\n    'septiembre': 9,\n    'sep': 9,\n    'sept': 9,\n    'sep.': 9,\n    'sept.': 9,\n    'octubre': 10,\n    'oct': 10,\n    'oct.': 10,\n    'noviembre': 11,\n    'nov': 11,\n    'nov.': 11,\n    'diciembre': 12,\n    'dic': 12,\n    'dic.': 12,\n}\n","exports.WEEKDAY_OFFSET = { \r\n    'dimanche': 0, \r\n    'dim': 0, \r\n    'lundi': 1, \r\n    'lun': 1,\r\n    'mardi': 2, \r\n    'mar':2, \r\n    'mercredi': 3, \r\n    'mer': 3, \r\n    'jeudi': 4, \r\n    'jeu': 4, \r\n    'vendredi': 5, \r\n    'ven': 5,\r\n    'samedi': 6, \r\n    'sam': 6\r\n};\r\n    \r\nexports.MONTH_OFFSET = { \r\n    'janvier': 1,\r\n    'jan': 1,\r\n    'jan.': 1,\r\n    'février': 2,\r\n    'fév': 2,\r\n    'fév.': 2,\r\n    'mars': 3,\r\n    'mar': 3,\r\n    'mar.': 3,\r\n    'avril': 4,\r\n    'avr': 4,\r\n    'avr.': 4,\r\n    'mai': 5,\r\n    'juin': 6,\r\n    'jun': 6,\r\n    'juillet': 7,\r\n    'jul': 7,\r\n    'jul.': 7,\r\n    'août': 8,\r\n    'aout': 8,\r\n    'septembre': 9,\r\n    'sep': 9,\r\n    'sep.': 9,\r\n    'sept': 9,\r\n    'sept.': 9,\r\n    'octobre': 10,\r\n    'oct': 10,\r\n    'oct.': 10,\r\n    'novembre': 11,\r\n    'nov': 11,\r\n    'nov.': 11,\r\n    'décembre': 12,\r\n    'dec': 12,\r\n    'dec.': 12\r\n};\r\n\r\nexports.INTEGER_WORDS_PATTERN = '(?:un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize)';\r\nexports.INTEGER_WORDS = {\r\n    'un' : 1,\r\n    'deux' : 2,\r\n    'trois' : 3,\r\n    'quatre' : 4,\r\n    'cinq' : 5,\r\n    'six' : 6,\r\n    'sept' : 7,\r\n    'huit' : 8,\r\n    'neuf' : 9,\r\n    'dix' : 10,\r\n    'onze' : 11,\r\n    'douze' : 12,\r\n    'treize' : 13,\r\n};\r\n","//! moment.js\n//! version : 2.10.3\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            m._isValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = getParsingFlags(from);\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function Locale() {\n    }\n\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && typeof module !== 'undefined' &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (typeof values === 'undefined') {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function get_set__set (mom, unit, value) {\n        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = typeof regex === 'function' ? regex : function (isStrict) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  matchWord);\n    addRegexToken('MMMM', matchWord);\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m) {\n        return this._months[m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m) {\n        return this._monthsShort[m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true,\n            msgWithStack = msg + '\\n' + (new Error()).stack;\n\n        return extend(function () {\n            if (firstTime) {\n                warn(msgWithStack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    var from_string__isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n        ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n        ['HH', /(T| )\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = from_string__isoRegex.exec(string);\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(matchOffset)) {\n                config._f += 'Z';\n            }\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYY', 'YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = createUTCDate(year, 0, 1).getUTCDay();\n        var daysToAdd;\n        var dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year      : dayOfYear > 0 ? year      : year - 1,\n            dayOfYear : dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n        }\n        return [now.getFullYear(), now.getMonth(), now.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (getParsingFlags(config).bigHour === true &&\n                config._a[HOUR] <= 12 &&\n                config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else if (isDate(input)) {\n            config._d = input;\n        } else {\n            configFromInput(config);\n        }\n\n        res = new Moment(checkOverflow(config));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             return other < this ? this : other;\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            return other > this ? this : other;\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchOffset);\n    addRegexToken('ZZ', matchOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(string) {\n        var matches = ((string || '').match(matchOffset) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n        return model._isUTC ? local__createLocal(input).zone(model._offset || 0) : local__createLocal(input).local();\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(input);\n            }\n            if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!input) {\n            input = 0;\n        }\n        else {\n            input = local__createLocal(input).utcOffset();\n        }\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (this._a) {\n            var other = this._isUTC ? create_utc__createUTC(this._a) : local__createLocal(this._a);\n            return this.isValid() && compareArrays(this._a, other.toArray()) > 0;\n        }\n\n        return false;\n    }\n\n    function isLocal () {\n        return !this._isUTC;\n    }\n\n    function isUtcOffset () {\n        return this._isUTC;\n    }\n\n    function isUtc () {\n        return this._isUTC && this._offset === 0;\n    }\n\n    var aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = create__isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                d : parseIso(match[4], sign),\n                h : parseIso(match[5], sign),\n                m : parseIso(match[6], sign),\n                s : parseIso(match[7], sign),\n                w : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n        return this.format(this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this > +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return inputMs < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this < +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return +this.clone().endOf(units) < inputMs;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var inputMs;\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this === +input;\n        } else {\n            inputMs = +local__createLocal(input);\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function diff (input, units, asFloat) {\n        var that = cloneWithOffset(input, this),\n            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n            delta, output;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if ('function' === typeof Date.prototype.toISOString) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(local__createLocal(), withoutSuffix);\n    }\n\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getSetISOWeekYear (input) {\n        var year = weekOfYear(this, 1, 4).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    addFormatToken('Q', 0, 0, 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {\n        var weekday = config._locale.weekdaysParse(input);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m) {\n        return this._weekdays[m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName) {\n        var i, mom, regex;\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            if (!this._weekdaysParse[i]) {\n                mom = local__createLocal([2000, 1]).day(i);\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, function () {\n        return this.hours() % 12 || 12;\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    function millisecond__milliseconds (token) {\n        addFormatToken(0, [token, 3], 0, 'millisecond');\n    }\n\n    millisecond__milliseconds('SSS');\n    millisecond__milliseconds('SSSS');\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n    addRegexToken('SSSS', matchUnsigned);\n    addParseToken(['S', 'SS', 'SSS', 'SSSS'], function (input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    });\n\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add          = add_subtract__add;\n    momentPrototype__proto.calendar     = moment_calendar__calendar;\n    momentPrototype__proto.clone        = clone;\n    momentPrototype__proto.diff         = diff;\n    momentPrototype__proto.endOf        = endOf;\n    momentPrototype__proto.format       = format;\n    momentPrototype__proto.from         = from;\n    momentPrototype__proto.fromNow      = fromNow;\n    momentPrototype__proto.to           = to;\n    momentPrototype__proto.toNow        = toNow;\n    momentPrototype__proto.get          = getSet;\n    momentPrototype__proto.invalidAt    = invalidAt;\n    momentPrototype__proto.isAfter      = isAfter;\n    momentPrototype__proto.isBefore     = isBefore;\n    momentPrototype__proto.isBetween    = isBetween;\n    momentPrototype__proto.isSame       = isSame;\n    momentPrototype__proto.isValid      = moment_valid__isValid;\n    momentPrototype__proto.lang         = lang;\n    momentPrototype__proto.locale       = locale;\n    momentPrototype__proto.localeData   = localeData;\n    momentPrototype__proto.max          = prototypeMax;\n    momentPrototype__proto.min          = prototypeMin;\n    momentPrototype__proto.parsingFlags = parsingFlags;\n    momentPrototype__proto.set          = getSet;\n    momentPrototype__proto.startOf      = startOf;\n    momentPrototype__proto.subtract     = add_subtract__subtract;\n    momentPrototype__proto.toArray      = toArray;\n    momentPrototype__proto.toDate       = toDate;\n    momentPrototype__proto.toISOString  = moment_format__toISOString;\n    momentPrototype__proto.toJSON       = moment_format__toISOString;\n    momentPrototype__proto.toString     = toString;\n    momentPrototype__proto.unix         = unix;\n    momentPrototype__proto.valueOf      = to_type__valueOf;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return typeof output === 'function' ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY LT',\n        LLLL : 'dddd, MMMM D, YYYY LT'\n    };\n\n    function longDateFormat (key) {\n        var output = this._longDateFormat[key];\n        if (!output && this._longDateFormat[key.toUpperCase()]) {\n            output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                return val.slice(1);\n            });\n            this._longDateFormat[key] = output;\n        }\n        return output;\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (typeof output === 'function') ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (typeof prop === 'function') {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months       =        localeMonths;\n    prototype__proto._months      = defaultLocaleMonths;\n    prototype__proto.monthsShort  =        localeMonthsShort;\n    prototype__proto._monthsShort = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse  =        localeMonthsParse;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years = 0;\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // Accurately convert days to years, assume start from year 0.\n        years = absFloor(daysToYears(days));\n        days -= absFloor(yearsToDays(years));\n\n        // 30 days to a month\n        // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n        months += absFloor(days / 30);\n        days   %= 30;\n\n        // 12 months -> 1 year\n        years  += absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absFloor(years / 4) -\n        //     absFloor(years / 100) + absFloor(years / 400);\n        return years * 146097 / 400;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToYears(days) * 12;\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(yearsToDays(this._months / 12));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var duration_get__milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes === 1          && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   === 1          && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    === 1          && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  === 1          && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   === 1          && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = iso_string__abs(this.years());\n        var M = iso_string__abs(this.months());\n        var D = iso_string__abs(this.days());\n        var h = iso_string__abs(this.hours());\n        var m = iso_string__abs(this.minutes());\n        var s = iso_string__abs(this.seconds() + this.milliseconds() / 1000);\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = duration_get__milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.10.3';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));"]}